{
    "name": "fortran-lang/fortran-lang.org",
    "issues": [
        {
            "number": 94,
            "user": "LKedward",
            "date": "2020-06-01 09:43:16+00:00",
            "title": "Fix: page-nav script to work on any page.",
            "text": "This allows page contents to be easily added\nto any page by simply adding <ul id=\"page-nav\"></ul>.\nThis will be populated by all the <h2> headings on the current page.",
            "comments": []
        },
        {
            "number": 93,
            "user": "LKedward",
            "date": "2020-06-01 09:35:30+00:00",
            "title": "Update contributor guide",
            "text": "Minor update to workflow and adds information on styling.\nAdds new guide on writing mini-book tutorials.",
            "comments": []
        },
        {
            "number": 92,
            "user": "jvdp1",
            "date": "2020-05-28 19:29:17+00:00",
            "title": "News letter for June",
            "text": "I started a news letter for June. It is far to be finished, but it was to give it a start.\nIf inappropriate, please close the PR.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-28 19:55:00+00:00",
                    "text": "Thanks! In Hugo, you can have an item that is not published. Is this possible with Jekyll?\nIf so, let's add the \"draft\" tag, merge this PR and then we can keep sending PR to the draft document in master. When it is ready, we remove the \"draft\" tag and it appears online."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-28 20:18:45+00:00",
                    "text": "Thank you for starting it, @jvdp1. I meant to do it for a while now but it slipped away.\nYes, drafts are placed into _drafts directory, see here. I don't see a good reason to commit it master as a draft when we can just work on it in a fork via a PR. Plus, we have a single dedicated PR for each newsletter. @certik why do you prefer working on a draft in master over one in a fork?\nMy main objection is that it interrupts the current work flow and we're only few days away from publication.\nSome items we should recap here (I'll help with this):\n\nDiscourse was new in May (this is a big one)\nShort recap of the first monthly call\nNew fpm functionality from #82 if @everythingfunctional merges it this month\nFortranCon2020 and community submissions to it (LFortran, stdlib, fpm, community)\n\nI think we should drop the Jobs section unless we get contributions from employers. It will be just be a lot of work to scout things out ourselves and I don't have time to do it right now."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-28 20:27:05+00:00",
                    "text": "I agree with Milan here, one PR per newsletter is better than many incremental ones imo. The drafts tag sounds useful if you're not using version control, but here the git workflow is superior."
                },
                {
                    "user": "everythingfunctional",
                    "date": "2020-05-28 20:37:19+00:00",
                    "text": "@milancurcic , I was giving everybody another day or two to follow up if they wanted to. I just merged it, so yeah, mention that in the newsletter."
                },
                {
                    "user": "certik",
                    "date": "2020-05-28 20:42:45+00:00",
                    "text": "If you open just one PR, is the workflow to comment here, or to provide suggestions in the diff?"
                },
                {
                    "user": "jvdp1",
                    "date": "2020-05-28 20:52:41+00:00",
                    "text": "I think we should drop the Jobs section unless we get contributions from employers. It will be just be a lot of work to scout things out ourselves and I don't have time to do it right now.\n\nI agree. I'll remove the section."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-28 20:53:53+00:00",
                    "text": "If you open just one PR, is the workflow to comment here, or to provide suggestions in the diff?\n\nI think either or both. You could also push directly to the newsletter branch, although I think this works well if contributing complete sections rather than small edits."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-28 20:56:22+00:00",
                    "text": "@everythingfunctional Great! Mind contributing a paragraph here on what's new in fpm? New feature (dependencies from remote git) is super cool and I think even an \"in action\" example would be great for the newsletter."
                },
                {
                    "user": "everythingfunctional",
                    "date": "2020-05-28 22:47:00+00:00",
                    "text": "@everythingfunctional Great! Mind contributing a paragraph here on what's new in fpm?\n\nYep, I'll take a crack at it."
                },
                {
                    "user": "everythingfunctional",
                    "date": "2020-05-29 02:33:53+00:00",
                    "text": "I don't seem to have permissions to push to the branch. @jvdp1 can you grant me access?"
                },
                {
                    "user": "certik",
                    "date": "2020-05-29 03:24:33+00:00",
                    "text": "Yes, that's the problem with just one PR as opposed to sending a bunch of PRs against a draft article, as anyone can send a PR and we can discuss changes on a case by case basis.\n\u2026\nOn Thu, May 28, 2020, at 8:34 PM, Brad Richardson wrote:\n\n\n I don't seem to have permissions to push to the branch. @jvdp1\n <https://github.com/jvdp1> can you grant me access?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#92 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWAHERS6DLREVJFVDE3RT4NJ3ANCNFSM4NNLTIYQ>."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-29 04:02:14+00:00",
                    "text": "@everythingfunctional I just added a permission for you to push to PR branches. If anybody else needs this, please let me know. For most edits and additions here, commit suggestions should be just fine.\n@certik Please open an issue to propose an alternative workflow and we'll discuss it. I'm open to ideas."
                },
                {
                    "user": "certik",
                    "date": "2020-05-29 04:46:50+00:00",
                    "text": "My only alternative workflow is what I proposed above. It's not that important for me, I am fine with doing just one PR. I have bigger fish to fry. :)"
                },
                {
                    "user": "jvdp1",
                    "date": "2020-05-29 05:50:36+00:00",
                    "text": "@everythingfunctional Can you push to the branch now?"
                },
                {
                    "user": "everythingfunctional",
                    "date": "2020-05-29 14:55:04+00:00",
                    "text": "There's always a little bit of friction and adjustment trying to strike a balance between security and convenience when trying to come up with the \"best\" workflow. I agree with @milancurcic and @LKedward , one PR per newsletter. Merging half done stuff always makes me nervous."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-31 17:33:16+00:00",
                    "text": "I think this is now in mostly good shape. Everyone please take the time to read it to make sure we're all okay with it."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-31 17:36:10+00:00",
                    "text": "While working on this locally, I learned that if the post date is future date--like June 1 here--then the post is automatically a draft and not published. I don't know if this is a Jekyll default or our own setting."
                },
                {
                    "user": "certik",
                    "date": "2020-06-01 02:52:38+00:00",
                    "text": "I would suggest to either put all of the people who helped with everything that says \"we\" as authors or put authors something like fortran-lang contributors.\n\u2026\nOn Sun, May 31, 2020, at 8:36 PM, Brad Richardson wrote:\n\n\n ***@***.**** approved this pull request.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#92 (review)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWGVLDMFEB5SHYABFXDRUMHZBANCNFSM4NNLTIYQ>."
                },
                {
                    "user": "certik",
                    "date": "2020-06-01 02:58:04+00:00",
                    "text": "In addition we should list all people who contributed code and comments across all fortran-lang repositories. I can run my scripts tomorrow to obtain the info.\n\u2026\nOn Sun, May 31, 2020, at 8:52 PM, Ond\u0159ej \u010cert\u00edk wrote:\n I would suggest to either put all of the people who helped with\n everything that says \"we\" as authors or put authors something like\n fortran-lang contributors.\n\n On Sun, May 31, 2020, at 8:36 PM, Brad Richardson wrote:\n >\n >\n > ***@***.**** approved this pull request.\n >\n > \u2014\n > You are receiving this because you were mentioned.\n > Reply to this email directly, view it on GitHub\n > <#92 (review)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWGVLDMFEB5SHYABFXDRUMHZBANCNFSM4NNLTIYQ>.\n >"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-06-01 03:32:24+00:00",
                    "text": "Yes, authors are authors of the newsletter and not of the contributions to the projects.\nI agree we should acknowledge all contributors. @certik if you can do this by tomorrow (and add your name to the authors list), by all means, but please let's not delay the newsletter."
                },
                {
                    "user": "certik",
                    "date": "2020-06-01 04:39:59+00:00",
                    "text": "I strongly believe we can't send this without acknowledgment. I'll try to do it tomorrow, but if we have to delay by a day, then that's better than not giving credit.\n\u2026\nOn Sun, May 31, 2020, at 9:32 PM, Milan Curcic wrote:\n\n\n Yes, authors are authors of the newsletter and not of the contributions\n to the projects.\n\n I agree we should acknowledge all contributors. @certik\n <https://github.com/certik> if you can do this by tomorrow (and add\n your name to the authors list), by all means, but please let's not\n delay the newsletter.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#92 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWHKIFYHXFAQXFI27ODRUMONHANCNFSM4NNLTIYQ>."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-06-01 11:23:18+00:00",
                    "text": "@certik sounds good, please merge when you're ready."
                },
                {
                    "user": "certik",
                    "date": "2020-06-01 15:30:05+00:00",
                    "text": "I am working on the scripts now."
                }
            ]
        },
        {
            "number": 91,
            "user": "HaoZeke",
            "date": "2020-05-23 02:45:35+00:00",
            "title": "packages: Init QUIP",
            "text": "",
            "comments": []
        },
        {
            "number": 90,
            "user": "arjenmarkus",
            "date": "2020-05-22 19:24:06+00:00",
            "title": "First commit of a mini-book on building programs",
            "text": "Please review the text: hopefully it presents the material in a clear way.  IMO, the pitfall is that it presents too much details. Suggestions for changes are welcome.",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-23 11:04:49+00:00",
                    "text": "I don't think this needs to be changed in this pull request but the Windows-specific content is presented for Cygwin, and I wonder whether the same content can be abstracted away from this environment somehow? For this tutorial it seems that Cygwin only serves to present the same Linux workflow but on Windows. Does Windows development need a separate tutorial maybe?\nI have no problem with Cygwin but:\n\nreaders may not be familiar with it and;\nit is only one of multiple linux-type interfaces for Windows.\n\n(If I need to develop on Windows I now use MSYS2 because unlike WSL and Cygwin it produces truly native Windows executables)"
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-25 17:45:10+00:00",
                    "text": "Hi Laurence,\n\nCygwin happens to be the easiest access I have to a Linux-like environment\n(with an up-to-date gfortran installation) ;). Nothing really essential.\nHowever, since some things simply work differently on Windows, I think it\nis good to present both platforms. Actually I would like to include MacOS*\nas well. But perhaps a bit more separation - present the common bits first\nand then (separately?) the specifics.\n\nRegards,\n\nArjen\n\nOp za 23 mei 2020 om 13:05 schreef Laurence Kedward <\nnotifications@github.com>:\n\u2026\n I don't think this needs to be changed in this pull request but the\n Windows-specific content is presented for *Cygwin*, and I wonder whether\n the same content can be abstracted away from this environment somehow? For\n this tutorial it seems that Cygwin only serves to present the same Linux\n workflow but on Windows. Does Windows development need a separate tutorial\n maybe?\n\n I have no problem with Cygwin but:\n\n    - readers may not be familiar with it and;\n    - it is only one of multiple linux-type interfaces for Windows.\n\n (If I need to develop on Windows I now use MSYS2 because unlike WSL and\n Cygwin it produces truly native Windows executables)\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#90 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YR6L7MJHD7CW7ZQC4JLRS6UV3ANCNFSM4NICRNUA>\n ."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-25 17:46:17+00:00",
                    "text": "Hi J\u00e9r\u00e9mie,\n\nthanks for the review - I will have a look and pick those cherries ;).\n\nRegards,\n\nArjen\n\n\n\nOp ma 25 mei 2020 om 18:58 schreef Jeremie Vandenplas <\nnotifications@github.com>:\n\u2026\n ***@***.**** commented on this pull request.\n\n Great introduction. Cherry-pick what you want/like.\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +option \"/out:\" with the name of the new library next to it. To add\n\n +object files to an existing library, leave out the \"/out:\" bit.\n\n +* On platforms like Linux there is a particular convention to name\n\n +libraries. If you name your library like \"libname.a\" (note the \"lib\"\n\n +prefix), then you can refer to it as \"-lname\" in the link step.\n\n +* Libraries are often sought in directories indicated by an option \"-L\"\n\n +or \"/LIBPATH\". This saves you from having to specify the exact path for\n\n +every library.\n\n +\n\n +Using libraries you can build very large programs without\n\n +having to resort to extremely long command lines.\n\n +\n\n +\n\n +### Static versus dynamic libraries\n\n +\n\n +The above discussion is tacitly assuming that you are using so-called\n\n\n \u2b07\ufe0f Suggested change\n\n -The above discussion is tacitly assuming that you are using so-called\n\n +The above discussion is tacitly assuming that you are using the so-called\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +or \"/LIBPATH\". This saves you from having to specify the exact path for\n\n +every library.\n\n +\n\n +Using libraries you can build very large programs without\n\n +having to resort to extremely long command lines.\n\n +\n\n +\n\n +### Static versus dynamic libraries\n\n +\n\n +The above discussion is tacitly assuming that you are using so-called\n\n +static libraries. Static libraries (or at least parts of their\n\n +contents) become an integral part of the executable program. The only\n\n +way to change the routines incorporated in the program is by rebuilding\n\n +the program with a new version of the library.\n\n +\n\n +A flexible alternative is to use so-called dynamic libraries. These\n\n\n \u2b07\ufe0f Suggested change\n\n -A flexible alternative is to use so-called dynamic libraries. These\n\n +A flexible alternative is to use the so-called dynamic libraries. These\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +every library.\n\n +\n\n +Using libraries you can build very large programs without\n\n +having to resort to extremely long command lines.\n\n +\n\n +\n\n +### Static versus dynamic libraries\n\n +\n\n +The above discussion is tacitly assuming that you are using so-called\n\n +static libraries. Static libraries (or at least parts of their\n\n +contents) become an integral part of the executable program. The only\n\n +way to change the routines incorporated in the program is by rebuilding\n\n +the program with a new version of the library.\n\n +\n\n +A flexible alternative is to use so-called dynamic libraries. These\n\n +libraries remain outside the executable program and as a consequence you\n\n\n \u2b07\ufe0f Suggested change\n\n -libraries remain outside the executable program and as a consequence you\n\n +libraries remain outside the executable program and as a consequence\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +\n\n +Using libraries you can build very large programs without\n\n +having to resort to extremely long command lines.\n\n +\n\n +\n\n +### Static versus dynamic libraries\n\n +\n\n +The above discussion is tacitly assuming that you are using so-called\n\n +static libraries. Static libraries (or at least parts of their\n\n +contents) become an integral part of the executable program. The only\n\n +way to change the routines incorporated in the program is by rebuilding\n\n +the program with a new version of the library.\n\n +\n\n +A flexible alternative is to use so-called dynamic libraries. These\n\n +libraries remain outside the executable program and as a consequence you\n\n +can replace them without rebulding the entire program. Compilers and\n\n\n \u2b07\ufe0f Suggested change\n\n -can replace them without rebulding the entire program. Compilers and\n\n +can be replaced without rebulding the entire program. Compilers and\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +### Static versus dynamic libraries\n\n +\n\n +The above discussion is tacitly assuming that you are using so-called\n\n +static libraries. Static libraries (or at least parts of their\n\n +contents) become an integral part of the executable program. The only\n\n +way to change the routines incorporated in the program is by rebuilding\n\n +the program with a new version of the library.\n\n +\n\n +A flexible alternative is to use so-called dynamic libraries. These\n\n +libraries remain outside the executable program and as a consequence you\n\n +can replace them without rebulding the entire program. Compilers and\n\n +indeed the operating system itself rely heavily on such dynamic\n\n +libraries. You could consider dynamic libraries as a sort of executable\n\n +programs that need a bit of help to be run.\n\n +\n\n +Building dynamic libraries works slightly differently:\n\n\n Differently based on what? I have the feeling that something is missing in\n this sentence.\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +\n\n +Building dynamic libraries works slightly differently:\n\n +\n\n +On Linux:\n\n +\n\n +    $ gfortran -fpic -c file1.f90 file2.f90\n\n +    $ gfortran -fpic -c file3.f90 ...\n\n +    $ gfortran -shared --o supportlib.so file1.o file2.o file3.o ...\n\n +\n\n +On Windows, with the Intel Fortran compiler:\n\n +\n\n +    $ ifort -c file1.f90 file2.f90\n\n +    $ ifort -c file3.f90 ...\n\n +    $ ifort -dll -exe:supportlib.dll file1.obj file2.obj file3.obj ...\n\n +\n\n +The differences:\n\n\n \u2b07\ufe0f Suggested change\n\n -The differences:\n\n +The differences are that:\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +\n\n +On Linux:\n\n +\n\n +    $ gfortran -fpic -c file1.f90 file2.f90\n\n +    $ gfortran -fpic -c file3.f90 ...\n\n +    $ gfortran -shared --o supportlib.so file1.o file2.o file3.o ...\n\n +\n\n +On Windows, with the Intel Fortran compiler:\n\n +\n\n +    $ ifort -c file1.f90 file2.f90\n\n +    $ ifort -c file3.f90 ...\n\n +    $ ifort -dll -exe:supportlib.dll file1.obj file2.obj file3.obj ...\n\n +\n\n +The differences:\n\n +\n\n +* You need to specify a compile option on Linux, \"-fpic\", because the\n\n\n This option is for gfortran right?It could be good to mention it\n explicitely\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +On Windows, with the Intel Fortran compiler:\n\n +\n\n +    $ ifort -c file1.f90 file2.f90\n\n +    $ ifort -c file3.f90 ...\n\n +    $ ifort -dll -exe:supportlib.dll file1.obj file2.obj file3.obj ...\n\n +\n\n +The differences:\n\n +\n\n +* You need to specify a compile option on Linux, \"-fpic\", because the\n\n +object code is slightly different.\n\n +* You need to tell in the link step that you want a dynamic library (on\n\n +Linux: a shared object/library, hence the extension \".so\"; on Windows:\n\n +a dynamic link library)\n\n +\n\n +There is one more thing to be aware of: On Windows you must\n\n +explicitly specify that a routine is to be _exported_, i.e. is visible\n\n\n \u2b07\ufe0f Suggested change\n\n -explicitly specify that a routine is to be _exported_, i.e. is visible\n\n +explicitly specify that a procedure is to be _exported_, i.e. is visible\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +compiler directive:\n\n +\n\n +    subroutine myroutine( ... )\n\n +    !GCC$ ATTRIBUTES DLLEXPORT:: myroutine\n\n +\n\n +Or, with the Intel Fortran compiler:\n\n +\n\n +    subroutine myroutine( ... )\n\n +    !DEC$ ATTRIBUTES DLLEXPORT:: myroutine\n\n +\n\n +Besides a dynamic library (DLL), a so-called import library may be\n\n +generated.\n\n +\n\n +Because the details differ per compiler, here are two examples:\n\n +gfortran on Cygwin and Intel Fortran on Windows. In both cases\n\n +we look at the tabulation program.\n\n\n \u2b07\ufe0f Suggested change\n\n -we look at the tabulation program.\n\n +we look at the `tabulation.f90` program.\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +    !GCC$ ATTRIBUTES DLLEXPORT:: myroutine\n\n +\n\n +Or, with the Intel Fortran compiler:\n\n +\n\n +    subroutine myroutine( ... )\n\n +    !DEC$ ATTRIBUTES DLLEXPORT:: myroutine\n\n +\n\n +Besides a dynamic library (DLL), a so-called import library may be\n\n +generated.\n\n +\n\n +Because the details differ per compiler, here are two examples:\n\n +gfortran on Cygwin and Intel Fortran on Windows. In both cases\n\n +we look at the tabulation program.\n\n +\n\n +### Cygwin and gfortran\n\n +The \"tabulate\" program requires a user-defined routine \"f\". If we\n\n\n \u2b07\ufe0f Suggested change\n\n -The \"tabulate\" program requires a user-defined routine \"f\". If we\n\n +The `tabulate` program requires a user-defined routine `f`. If we\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +    !DEC$ ATTRIBUTES DLLEXPORT:: myroutine\n\n +\n\n +Besides a dynamic library (DLL), a so-called import library may be\n\n +generated.\n\n +\n\n +Because the details differ per compiler, here are two examples:\n\n +gfortran on Cygwin and Intel Fortran on Windows. In both cases\n\n +we look at the tabulation program.\n\n +\n\n +### Cygwin and gfortran\n\n +The \"tabulate\" program requires a user-defined routine \"f\". If we\n\n +let it reside in a dynamic library, say \"function.dll\", we can simply\n\n +replace the implementation of the function by putting another dynamic\n\n +library in the directory. No need to rebuild the program as such.\n\n +\n\n +On Cygwin it is not necessary to explicitly export a routine - all\n\n\n \u2b07\ufe0f Suggested change\n\n -On Cygwin it is not necessary to explicitly export a routine - all\n\n +On Cygwin it is not necessary to explicitly export a procedure - all\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +\n\n +Besides a dynamic library (DLL), a so-called import library may be\n\n +generated.\n\n +\n\n +Because the details differ per compiler, here are two examples:\n\n +gfortran on Cygwin and Intel Fortran on Windows. In both cases\n\n +we look at the tabulation program.\n\n +\n\n +### Cygwin and gfortran\n\n +The \"tabulate\" program requires a user-defined routine \"f\". If we\n\n +let it reside in a dynamic library, say \"function.dll\", we can simply\n\n +replace the implementation of the function by putting another dynamic\n\n +library in the directory. No need to rebuild the program as such.\n\n +\n\n +On Cygwin it is not necessary to explicitly export a routine - all\n\n +publically visible routines are exported when you build a dynamic library.\n\n\n \u2b07\ufe0f Suggested change\n\n -publically visible routines are exported when you build a dynamic library.\n\n +publically visible procedures are exported when you build a dynamic library.\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +The \"tabulate\" program requires a user-defined routine \"f\". If we\n\n +let it reside in a dynamic library, say \"function.dll\", we can simply\n\n +replace the implementation of the function by putting another dynamic\n\n +library in the directory. No need to rebuild the program as such.\n\n +\n\n +On Cygwin it is not necessary to explicitly export a routine - all\n\n +publically visible routines are exported when you build a dynamic library.\n\n +Also, no import library is generated.\n\n +\n\n +Since our dynamic library can be built from a single source file, we\n\n +can take a shortcut:\n\n +\n\n +    $ gfortran -shared -o function.dll function.f90\n\n +\n\n +This produces the files \"function.dll\" and \"function.mod\". The\n\n +utility \"nm\" tells us the exact name of the function \"f\":\n\n\n \u2b07\ufe0f Suggested change\n\n -utility \"nm\" tells us the exact name of the function \"f\":\n\n +utility \"nm\" tells us the exact name of the function `f`:\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +\n\n +This produces the files \"function.dll\" and \"function.mod\". The\n\n +utility \"nm\" tells us the exact name of the function \"f\":\n\n +\n\n +    $ nm function.dll\n\n +    ...\n\n +    000000054f9d7000 B __dynamically_loaded\n\n +                     U __end__\n\n +    0000000000000200 A __file_alignment__\n\n +    000000054f9d1030 T __function_MOD_f\n\n +    000000054f9d1020 T __gcc_deregister_frame\n\n +    000000054f9d1000 T __gcc_register_frame\n\n +    ...\n\n +\n\n +It has received a prefix `__function_MOD_` to distinguish it from any\n\n +other routine \"f\" that might be defined in another module.\n\n\n \u2b07\ufe0f Suggested change\n\n -other routine \"f\" that might be defined in another module.\n\n +other procedure `f` that might be defined in another module.\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +    subroutine myroutine( ... )\n\n +    !GCC$ ATTRIBUTES DLLEXPORT:: myroutine\n\n +\n\n +Or, with the Intel Fortran compiler:\n\n +\n\n +    subroutine myroutine( ... )\n\n +    !DEC$ ATTRIBUTES DLLEXPORT:: myroutine\n\n +\n\n +Besides a dynamic library (DLL), a so-called import library may be\n\n +generated.\n\n +\n\n +Because the details differ per compiler, here are two examples:\n\n +gfortran on Cygwin and Intel Fortran on Windows. In both cases\n\n +we look at the tabulation program.\n\n +\n\n +### Cygwin and gfortran\n\n\n It could be good to replace Cygwin by GNU/Linux\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +\n\n +Build tools\n\n +-----------\n\n +\n\n +If this seems complicated, well, you are right and we are only\n\n +scratching the surface here. The complications arise because of\n\n +differences between platforms, differences between compilers/linkers and\n\n +because of differences in the way programs are set up. Fortunately,\n\n +there are many tools to help configure and maintain the build steps.\n\n +We will not try and catalogue them, but give instead a very limited\n\n +list of tools that you typically encounter:\n\n +\n\n +* The \"make\" utility is a classical tool that uses instructions about\n\n +how the various components of a program depend on each other to\n\n +efficiently compile and link the program (or programs). It takes a\n\n +so-called makefile that contains the dependencies.\n\n\n \u2b07\ufe0f Suggested change\n\n -so-called makefile that contains the dependencies.\n\n +so-called `Makefile` that contains the dependencies.\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +how the various components of a program depend on each other to\n\n +efficiently compile and link the program (or programs). It takes a\n\n +so-called makefile that contains the dependencies.\n\n +\n\n +    Simply put:\n\n +\n\n +    If a program file is older than any of the libraries and object files\n\n +it depends on, the make utility knows it has to rebuild it and goes on\n\n +to look at the libraries and object files - are any out of date?\n\n +\n\n +    If an object file is older than the corresponding source file, the\n\n +make utility knows it has to compile the source file.\n\n +\n\n +* Integrated development tools take care of many of the above details. A\n\n +popular tool on Windows is MicroSoft's Visual Studio, but others exist,\n\n +such Eclipse (Photran) and Code::Blocks. They offer a graphical\n\n\n \u2b07\ufe0f Suggested change\n\n -such Eclipse (Photran) and Code::Blocks. They offer a graphical\n\n +such as Eclipse (Photran) and Code::Blocks. They offer a graphical\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +to look at the libraries and object files - are any out of date?\n\n +\n\n +    If an object file is older than the corresponding source file, the\n\n +make utility knows it has to compile the source file.\n\n +\n\n +* Integrated development tools take care of many of the above details. A\n\n +popular tool on Windows is MicroSoft's Visual Studio, but others exist,\n\n +such Eclipse (Photran) and Code::Blocks. They offer a graphical\n\n +user-interface, but are often very specific for the compiler and\n\n +platform.\n\n +\n\n +* Maintenance tools like autotools and CMake can generate makefiles or\n\n +Visual Studio project files via a high-level description. They abstract\n\n +away from the compiler and platform specifics.\n\n +\n\n +Here is a very simple example of a makefile as used by the make utility,\n\n\n \u2b07\ufe0f Suggested change\n\n -Here is a very simple example of a makefile as used by the make utility,\n\n +Here is a very simple example of a `Makefile` as used by the make utility,\n\n\n ------------------------------\n\n In learn/building_programs.md\n <#90 (comment)>\n :\n\n > +A pre-built program that does not need to be customised, other than via its\n\n +input, will still need to come with the various run-time libraries and will\n\n +be specific to the operating system/environment it was built for.\n\n +\n\n +The set of run-time libraries differs per operating system and compiler version.\n\n +For a freely available compiler like gfortran, the easiest thing is to ask the\n\n +user to install that compiler on their system. In the case of Windows: the Cygwin\n\n +environment may be called for.\n\n +\n\n +Alternatively, you can supply copies of the run-time libraries together with your\n\n +program. Put them in the directory where they can be found at run-time.\n\n +\n\n +Note: On Windows, the Intel Fortran comes with a set of _redistributable_ libraries.\n\n +These will need to be made available.\n\n +\n\n +In general: use a tool like \"ldd\" or \"dependency walker\" to find out what\n\n\n \u2b07\ufe0f Suggested change\n\n -In general: use a tool like \"ldd\" or \"dependency walker\" to find out what\n\n +In general: use a tool like `ldd` or `dependency walker` to find out what\n\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#90 (review)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YR5BRJN56DOTBQJR35DRTKPSPANCNFSM4NICRNUA>\n ."
                },
                {
                    "user": "certik",
                    "date": "2020-05-25 19:15:40+00:00",
                    "text": "Just a note regarding the platform: I strongly propose that our long term goal should be to run natively on all platforms (Linux, macOS, Windows natively as well as in Cygwin and WSL, HPC, ...) using native tools where applicable. We should have some tutorial \"how to get started on each platform\", and how to do the basic things for each platform. That way the actual tutorial such as this PR can be written for one particular platform (Cygwin in this case) and people would know how to execute the commands on other platforms using the \"how to get started on each platform\" tutorial.\nSo I think it's perfectly fine if this tutorial sticks with Cygwin."
                }
            ]
        },
        {
            "number": 89,
            "user": "certik",
            "date": "2020-05-22 18:14:02+00:00",
            "title": "Consider switching to Hugo from Jekyll",
            "text": "I have great experience with Hugo for site generation --- a single binary download on all platforms, it's very fast to run, and overall seems robust.\nThe issue with Jekyll is that it's harder to install and you typically run into issue such as this one:\n#77 (comment)\nThis is relatively lower priority, since this website was primarily developed by @milancurcic and @LKedward and so I let them choose the technology. I opened this issue just as an alternative to know about.",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-05-22 18:27:15+00:00",
                    "text": "Indeed Hugo is easier to install and run because it's a single binary. The only Jekyll issue that I see is actually nothing about Jekyll but with gem and bundler, which IMO just plain suck. Especially when you start using specific versions. Tracebacks are inscrutable.\nHugo was actually what I started working with at first and then gave up after few hours. I was somewhat familiar with Jekyll already, and Hugo is overall more complex so there was more to learn.\nSo setting up the tooling to run Jekyll is worse than Hugo. But after you do that once, I think Jekyll is easier to work with than Hugo. Personal opinion of course.\nBuild previews that @LKedward made mostly solves this. If you know how to submit a PR, there's no need to run locally. For writing markdown pages and submitting content this is good enough. If you need to make structural changes to the website, chances are that setting up Jekyll is not an issue."
                },
                {
                    "user": "certik",
                    "date": "2020-05-22 18:35:09+00:00",
                    "text": "That's fine, you two are the main maintainers, so if you are comfortable with Jekyll, that is fine with me. If we start getting more users struggling to install Jekyll, we can reconsider."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-23 13:43:29+00:00",
                    "text": "I agree Jekyll isn't great for contributors to setup - I'm also not sure if it supports Windows or not?\nI find the Jekyll templating language very rudimentary at times, but this also means that it isn't too complicated to get started. I'm happy to stick with Jekyll for now, but we can reconsider later if need be."
                }
            ]
        },
        {
            "number": 88,
            "user": "LKedward",
            "date": "2020-05-20 15:38:32+00:00",
            "title": "Fixes #73 lapack entry in package index.",
            "text": "Fixes #73",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-20 16:30:53+00:00",
                    "text": "Good catch."
                }
            ]
        },
        {
            "number": 87,
            "user": "LKedward",
            "date": "2020-05-20 15:31:00+00:00",
            "title": "Add: Navbar social icons",
            "text": "Resolves #85.\nI also removed the social links from the news sidebar (now that they're in the navbar) and replaced them with the fortran-lang twitter feed.",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-20 15:31:09+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-20 15:32:09+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/87/"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-20 16:36:50+00:00",
                    "text": "#delete_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-20 16:37:13+00:00",
                    "text": "The preview build for this PR has now been deleted."
                }
            ]
        },
        {
            "number": 86,
            "user": "shahmoradi",
            "date": "2020-05-19 06:47:42+00:00",
            "title": " adding the ParaMonte library ",
            "text": "This commit adds the ParaMonte library to the list of Fortran numerical libraries. ParaMonte is a well-tested general-purpose open-source high-performance MPI/Coarray-parallel Monte Carlo simulation library implemented in the 2018-standard-complaint Fortran programming language, currently with interfaces to the C/C++/Fortran/MATLAB/Python programming languages. The project's documentation is available at: https://github.com/cdslaborg/paramonte",
            "comments": []
        },
        {
            "number": 85,
            "user": "certik",
            "date": "2020-05-18 19:40:56+00:00",
            "title": "Move the Discourse link at the top",
            "text": "Currently one must scroll down to find the Discourse link. Let's put it at the top horizontal menu? I think we want this as the primary discussion forum, so that would be a great place for it.",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-05-18 19:56:55+00:00",
                    "text": "I agree it should be easier to find. I'm not crazy about the Discourse badge being in the navbar, design-wise. But maybe it could work, all the way to the right of \"News\". The problem here is that on mobile, Discourse link would be hidden until the user opens the sandwich bar. A workaround for this would be to keep the Discourse link both where it is now, and to add it to the navbar.\nAn alternative would be to move the whole \"Join us\" section up, and bring the \"News\" section down. I think this would be my favorite solution."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-18 20:00:27+00:00",
                    "text": "Yeah I agree, just move the section up. It definitely shouldn't be in the navbar."
                },
                {
                    "user": "certik",
                    "date": "2020-05-18 20:14:04+00:00",
                    "text": "I was thinking putting either \"Forum\" or \"Discourse\" text / link into the navigation bar at the top, not the logo. Is there a problem design-wise with that?"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-18 20:20:28+00:00",
                    "text": "We could do something like this where we group our external links (discourse, twitter, github) as mini icons in the navbar far right, separate from internal nav links?"
                },
                {
                    "user": "certik",
                    "date": "2020-05-18 20:23:34+00:00",
                    "text": "@LKedward this looks even better! I just want to go to fortran-lang.org and then get to Discourse from there. I just don't remember the address and ultimately we want more people to do what I do --- to go through the main webpage. So that as we add more things, or announcements, they can see them."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-18 20:27:14+00:00",
                    "text": "I just want to go to fortran-lang.org and then get to Discourse from there. I just don't remember the address ..\n\nI've been doing the exact same thing! Scrolling down each time.\n\nand ultimately we want more people to do what I do --- to go through the main webpage. So that as we add more things, or announcements, they can see them.\n\nAbsolutely I agree, we want this to be more accessible and visible.\nI can have a go at putting this together this week \ud83d\udc4d"
                }
            ]
        },
        {
            "number": 84,
            "user": "certik",
            "date": "2020-05-18 14:56:01+00:00",
            "title": "Cray: Fix the name of CCE",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-18 14:57:40+00:00",
                    "text": "This was an approved change by Cray, so I am just going to merge it."
                }
            ]
        },
        {
            "number": 83,
            "user": "LKedward",
            "date": "2020-05-17 14:39:33+00:00",
            "title": "Add navigation structure for learn section",
            "text": "As we expand the Quickstart tutorial and others start contributing tutorial content, we need a central structure for organising the learning pages on the site.\nI've drafted a possible solution in this PR:\n\nA new page layout is introduced with a navigation side bar which displays the contents of the learn section and the structure of the current page headings.\nA yaml file is used to define the contents and order of the navigation bar whereby learning pages are grouped into named chapters\n\nThis approach:\n\nmakes navigation explicitly clear to site users (no getting lost among lots of pages);\nallows contributors to start adding tutorial pages to the site now;\nbut is flexible enough that it can easily be restructured as the number of tutorials increases;\n\nTo add a page, contributors need only write a markdown file and add an entry under the appropriate chapter in the yaml data file. (I will update CONTRIBUTING.md)\nFor this draft PR I've just included the existing quickstart tutorial to demonstrate; eventually the landing page will be updated to include useful links etc.\n@milancurcic , @certik what are your thoughts?\n#build_preview",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-17 14:39:56+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-17 14:40:59+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/83/"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-17 15:02:27+00:00",
                    "text": "I think this is great and a step forward. I approve.\nI anticipate that our structure of content will be more unordered than ordered, so we may drop the numbering, but we can figure this out later as we go."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-30 14:50:36+00:00",
                    "text": "Okay, I've restructured this PR so that it's less like a single monolithic book with chapters and\ninstead it allows single-page and multi-page mini-book tutorials.\nThe name and contents of each mini-book is defined in a yaml data file which is used to: populate the Learn landing page with a list of books, grouped by category; and populate a table-of-contents for each mini-book.\nTo demonstrate this, the Quickstart tutorial has been broken out into multiple pages so it's easier to navigate.\nThe 'Learn' landing page has been updated to also include an initial selection of third-party resources as well.\nThe Learn page is a little bare at the moment, but with the structure now in place it should be quite easy to start adding more mini-book tutorials (starting with #90).\nI will add a section to the contributor guide on how to write a mini-book tutorial.\n#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-30 14:51:37+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/83/"
                },
                {
                    "user": "certik",
                    "date": "2020-05-30 16:07:22+00:00",
                    "text": "@LKedward this looks really great. Lots of work done here thank you!\nWe should put there a link to https://github.com/j3-fortran/fortran_proposals also I think.\nI think it looks great, +1 from me."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-30 19:21:04+00:00",
                    "text": "An issue that comes up here is how to sort the books? Currently they don't seem sorted in any particular way. Books at the top of the list will be implicitly given higher priority or sense of importance. So we need to decide how to sort them:\n\nAlphabetically by title?\nAlphabetically by author last name?\nChronologically from newest to oldest?\n\n\nAs yes, good point, I hadn't considered this.\nI'm not sure what the best/standard way to sort them is - my preference would be to sort by date with newest first to prioritise up-to-date editions."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-30 19:31:31+00:00",
                    "text": "Print books are now sorted by year descending - this can be changed to alphabetical if desired.\n#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-30 19:32:40+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/83/"
                },
                {
                    "user": "jvdp1",
                    "date": "2020-05-30 20:16:49+00:00",
                    "text": "This looks really great. Easy to navigate and read! Really good job!"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-31 09:19:20+00:00",
                    "text": "Thanks all for the feedback and suggestions. I will now merge and work on updating the contributor guide with instructions in a new PR."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-31 09:25:09+00:00",
                    "text": "#delete_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-31 09:25:28+00:00",
                    "text": "The preview build for this PR has now been deleted."
                }
            ]
        },
        {
            "number": 82,
            "user": "LKedward",
            "date": "2020-05-17 14:19:00+00:00",
            "title": "Update Quickstart tutorial",
            "text": "#7 (comment)\nWe can discuss what needs to be done here.",
            "comments": []
        },
        {
            "number": 81,
            "user": "aktech",
            "date": "2020-05-15 18:29:42+00:00",
            "title": "Use {{site.baseurl}} instead of relative link",
            "text": "As suggested here:\n#80 (comment) and\nhttps://github.com/fortran-lang/fortran-lang.org/blob/master/CONTRIBUTING.md#internal-site-links\nping @LKedward @certik",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-15 20:47:56+00:00",
                    "text": "Thanks Amit!"
                }
            ]
        },
        {
            "number": 80,
            "user": "aktech",
            "date": "2020-05-15 18:17:00+00:00",
            "title": "Fix broken getting started link from tutorial -> learn",
            "text": "It seems the getting started link in the home page (https://fortran-lang.org/) above footer is broken as it still points to tutorial/, which was removed in this commit: 2adc5eb#diff-94d9a081cd1256334373c8ca6fb6276c",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-15 18:19:47+00:00",
                    "text": "Nice to see you here @aktech !"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-15 18:22:27+00:00",
                    "text": "Thank you and welcome @aktech !"
                }
            ]
        },
        {
            "number": 79,
            "user": "LKedward",
            "date": "2020-05-15 14:49:22+00:00",
            "title": "Transfer fortran90.org content",
            "text": "See #7 (comment)",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-15 17:27:18+00:00",
                    "text": "Yes, we should transfer it and then put a banner at fortran90.org to come here."
                }
            ]
        },
        {
            "number": 78,
            "user": "LKedward",
            "date": "2020-05-15 14:47:42+00:00",
            "title": "Tutorial: object-oriented Fortran",
            "text": "As discussed on fortran-lang mailing list\nAssign: Williams",
            "comments": [
                {
                    "user": "jvdp1",
                    "date": "2020-05-16 06:48:53+00:00",
                    "text": "Here is a good tutorial (IMHO) on Fortran OOP:\nhttps://gist.github.com/n-s-k/522f2669979ed6d0582b8e80cf6c95fd\nIt is maybe worthwhile to ask the author (@n-s-k) if he would be interested to contribute to this tutorial."
                }
            ]
        },
        {
            "number": 77,
            "user": "LKedward",
            "date": "2020-05-15 14:45:12+00:00",
            "title": "Tutorial: building compiled programs",
            "text": "As discussed on fortran-lang mailing list, this will cover compiling, linking and libraries.\nAssigned: @arjenmarkus",
            "comments": [
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-15 19:17:49+00:00",
                    "text": "I took the opportunity of a couple of hours during a lazy evening to sit down and write a quick-and-dirty document. No Markdown mark-up, just plain text. It is just the start, but it should illustrate what I am thinking of. Of course there are plenty of tools to help with building a program, but I think it is also important to understand what is going on when you build a program.\nThe document is very much work-in-progress, so have a look and et me know whether this is useful or not.\nbuilding_programs.txt"
                },
                {
                    "user": "certik",
                    "date": "2020-05-15 19:35:02+00:00",
                    "text": "@arjenmarkus I think this looks great and I would like to have it in our Documentation section somewhere. @milancurcic, @LKedward where do you think would be the best place?"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-15 19:39:27+00:00",
                    "text": "I love this. I think this is the kind of style we should take for tutorials.\nI think it would work well as a self-contained \"book\" (as described in #7) on building and linking, and we can link to it from the quickstart tutorial (/learn page).\nIt will be straightforward to convert it to Markdown."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-15 20:08:37+00:00",
                    "text": "Looks great, thanks @arjenmarkus."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-15 20:31:07+00:00",
                    "text": "Well, that is encouraging :).\n\nRegards,\n\nArjen\n\nOp vr 15 mei 2020 om 22:08 schreef Laurence Kedward <\nnotifications@github.com>:\n\u2026\n Looks great, thanks @arjenmarkus <https://github.com/arjenmarkus>.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YRZGPFQNWV62M4QGT6LRRWONJANCNFSM4NBUJL7Q>\n ."
                },
                {
                    "user": "jvdp1",
                    "date": "2020-05-16 06:35:23+00:00",
                    "text": "@arjenmarkus Thank you for this manuscript. I really like the style.\nIt would be indeed easy to convert it to Markdown. We could help with the conversion when it will submitted to a PR."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-16 18:32:20+00:00",
                    "text": "Thanks - I am always a trifle uncertain about the precise formatting or the\ndialect. Of course, so far the formatting requirements are very basic - and\nI intend to keep it that way.\n\nRegards,\n\nArjen\n\nOp za 16 mei 2020 om 08:35 schreef Jeremie Vandenplas <\nnotifications@github.com>:\n\u2026\n @arjenmarkus <https://github.com/arjenmarkus> Thank you for this\n manuscript. I really like the style.\n It would be indeed easy to convert it to Markdown. We could help with the\n conversion when it will submitted to a PR.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YRYQGAVJTKVTXMZHPMDRRYX3NANCNFSM4NBUJL7Q>\n ."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-19 06:49:59+00:00",
                    "text": "Short update: I have almost completed the draft of the tutorial I have in\nmind. A rather tricky problem: make sure the _necessary_ details are\npresented in a clear and structured way. It is easy enough to structure the\ntext and it is easy enough to describe all the details. But the challenge\nis: only what is necessary in a structured way :).\n\nPutting in the Markdown formatting was not a big issue, butI will probably\nneed some assistance with the next step - the pull request.\n\nRegards,\n\nArjen\n\nOp za 16 mei 2020 om 20:32 schreef Arjen Markus <arjen.markus895@gmail.com>:\n\u2026\n Thanks - I am always a trifle uncertain about the precise formatting or\n the dialect. Of course, so far the formatting requirements are very basic -\n and I intend to keep it that way.\n\n Regards,\n\n Arjen\n\n Op za 16 mei 2020 om 08:35 schreef Jeremie Vandenplas <\n ***@***.***>:\n\n> @arjenmarkus <https://github.com/arjenmarkus> Thank you for this\n> manuscript. I really like the style.\n> It would be indeed easy to convert it to Markdown. We could help with the\n> conversion when it will submitted to a PR.\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <#77 (comment)>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAN6YRYQGAVJTKVTXMZHPMDRRYX3NANCNFSM4NBUJL7Q>\n> .\n>"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-19 07:35:22+00:00",
                    "text": "Thanks for the update @arjenmarkus.\nRegarding the next step, I'm happy to provide guidance on putting together the PR or otherwise to submit the PR myself on your behalf."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 14:14:14+00:00",
                    "text": "Hi Laurence,\n\nokay, I have finished the draft, converted it to Markdown and I have cloned\nthe website on my machine. I can simply add the file in the subdirectory\n\"learn\", but I suppose I also need to add the header, like from the index:\n---\nlayout: page\ntitle: Quickstart Fortran\npermalink: /learn/\nnavbar: Learn\n---\nbut what to fill in?\n\nAlso: for now I have added a link to CC-BY, but is that the sort of license\nwe want to use for these mini-books? Or do we use LGPL or ...?\n\nRegards,\n\nArjen\n.\n\nOp di 19 mei 2020 om 09:35 schreef Laurence Kedward <\nnotifications@github.com>:\n\u2026\n Thanks for the update @arjenmarkus <https://github.com/arjenmarkus>.\n Regarding the next step, I'm happy to provide guidance on putting together\n the PR or otherwise to submit the PR myself on your behalf.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YR3FKPEDIEZ32WDH6R3RSIZETANCNFSM4NBUJL7Q>\n ."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-22 14:28:35+00:00",
                    "text": "Hi @arjenmarkus,\nSounds good. Regarding the header, you only need to change the title field to the title of your tutorial\nand the permalink field to something like permalink: /learn/building_programs - this will cause the web address of your tutorial to be https://fortran-lang.org/learn/building_programs. The ending after /learn/ just needs to be a short descriptive string for your tutorial. The other fields (layout, navbar) can be kept the same as in the index file.\nI'm not sure if we are using a different license for the tutorial content - the website source is currently licensed under MIT, but it may be a good idea to license the tutorials under one of the CC-BY licenses. As the author and copyright holder, the licensing of the tutorial content is ultimately your choice - but it would be good to agree a license for all tutorial and similar content on fortran-lang.org. What are your thoughts @milancurcic and @certik ?"
                },
                {
                    "user": "certik",
                    "date": "2020-05-22 14:30:18+00:00",
                    "text": "I suggest to use an MIT license by default for such books. Consistent with other materials here. Unless the author specifically objects, in which case we can discuss on a case by case basis.\n\u2026\nOn Fri, May 22, 2020, at 8:14 AM, arjenmarkus wrote:\n\n\n  Hi Laurence,\n\n  okay, I have finished the draft, converted it to Markdown and I have cloned\n  the website on my machine. I can simply add the file in the subdirectory\n  \"learn\", but I suppose I also need to add the header, like from the index:\n  ---\n  layout: page\n  title: Quickstart Fortran\n  permalink: /learn/\n  navbar: Learn\n  ---\n  but what to fill in?\n\n  Also: for now I have added a link to CC-BY, but is that the sort of license\n  we want to use for these mini-books? Or do we use LGPL or ...?\n\n  Regards,\n\n  Arjen\n  .\n\n  Op di 19 mei 2020 om 09:35 schreef Laurence Kedward <\n  ***@***.***>:\n\n  > Thanks for the update @arjenmarkus <https://github.com/arjenmarkus>.\n  > Regarding the next step, I'm happy to provide guidance on putting\n together\n  > the PR or otherwise to submit the PR myself on your behalf.\n  >\n  > \u2014\n  > You are receiving this because you were mentioned.\n  > Reply to this email directly, view it on GitHub\n  >\n <#77 (comment)>,\n  > or unsubscribe\n  >\n <https://github.com/notifications/unsubscribe-auth/AAN6YR3FKPEDIEZ32WDH6R3RSIZETANCNFSM4NBUJL7Q>\n  > .\n  >\n \u2014\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWBIDBGGX23I6ZUPBZTRS2CELANCNFSM4NBUJL7Q>."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-22 14:34:40+00:00",
                    "text": "I suggest to use an MIT license by default for such books. Consistent with other materials here. Unless the author specifically objects, in which case we can discuss on a case by case basis.\n\nI agree with preferring consistency, but MIT is strictly a software license - I believe the general copyright equivalent is CC-BY which simply requires attribution like MIT."
                },
                {
                    "user": "certik",
                    "date": "2020-05-22 14:38:37+00:00",
                    "text": "I am not an expert on the CC licenses, I know some of them are not open source so we have to be very careful to pick the right one. What does Rust use for their documentation?\n\u2026\nOn Fri, May 22, 2020, at 8:34 AM, Laurence Kedward wrote:\n\n\n > I suggest to use an MIT license by default for such books. Consistent with other materials here. Unless the author specifically objects, in which case we can discuss on a case by case basis.\n\n I agree with preferring consistency, but MIT is strictly a software\n license - I believe the general copyright equivalent is CC-BY which\n simply requires attribution like MIT.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWAWTD7KUYWDJZRTMETRS2EQ5ANCNFSM4NBUJL7Q>."
                },
                {
                    "user": "certik",
                    "date": "2020-05-22 14:43:04+00:00",
                    "text": "P.S. I view documentation as code: it's written in Markdown, which literally is a source code that gets parsed and compiled to the final form, whether html or pdf. Also one can then copy and paste example code from the documentation into user projects without problem. So I've always used MIT for documentation.  But I am not opposed to other options.\n\u2026\nOn Fri, May 22, 2020, at 8:38 AM, Ond\u0159ej \u010cert\u00edk wrote:\n I am not an expert on the CC licenses, I know some of them are not open\n source so we have to be very careful to pick the right one. What does\n Rust use for their documentation?\n\n On Fri, May 22, 2020, at 8:34 AM, Laurence Kedward wrote:\n >\n >\n > > I suggest to use an MIT license by default for such books. Consistent with other materials here. Unless the author specifically objects, in which case we can discuss on a case by case basis.\n >\n > I agree with preferring consistency, but MIT is strictly a software\n > license - I believe the general copyright equivalent is CC-BY which\n > simply requires attribution like MIT.\n >\n > \u2014\n > You are receiving this because you were mentioned.\n > Reply to this email directly, view it on GitHub\n > <#77 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWAWTD7KUYWDJZRTMETRS2EQ5ANCNFSM4NBUJL7Q>.\n >"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-22 14:44:40+00:00",
                    "text": "I am not an expert on the CC licenses, I know some of them are not open source so we have to be very careful to pick the right one.\n\nAh okay, good point - I'm no expert either.\n\nWhat does Rust use for their documentation?\n\nIt appears to be under the same license as Rust itself which is MIT/Apache2.\n\nP.S. I view documentation as code: it's written in Markdown, which literally is a source code that gets parsed and compiled to the final form, whether html or pdf. Also one can then copy and paste example code from the documentation into user projects without problem. So I've always used MIT for documentation. But I am not opposed to other options.\n\nThis makes sense to me; I'm happy to keep with MIT for consistency then \ud83d\udc4d"
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 16:54:59+00:00",
                    "text": "Hi everyone,\n\nno problem with me - as long as it is a permissive licence :). The MIT\nlicence should do fine and consistency is not unimportance.\n\nRegards,\n\nArjen\n\nOp vr 22 mei 2020 om 16:44 schreef Laurence Kedward <\nnotifications@github.com>:\n\u2026\n I am not an expert on the CC licenses, I know some of them are not open\n source so we have to be very careful to pick the right one.\n\n Ah okay, good point - I'm no expert either.\n\n What does Rust use for their documentation?\n\n It appears to be under the same license as Rust itself which is MIT/Apache2\n <https://github.com/rust-lang/book/blob/master/CONTRIBUTING.md#licensing>.\n\n P.S. I view documentation as code: it's written in Markdown, which\n literally is a source code that gets parsed and compiled to the final form,\n whether html or pdf. Also one can then copy and paste example code from the\n documentation into user projects without problem. So I've always used MIT\n for documentation. But I am not opposed to other options.\n\n This makes sense to me; I'm happy to keep with MIT for consistency then \ud83d\udc4d\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YR7LVOJEL47USCHNI4DRS2FWNANCNFSM4NBUJL7Q>\n ."
                },
                {
                    "user": "certik",
                    "date": "2020-05-22 18:02:20+00:00",
                    "text": "Ok then, let's stick to MIT then."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 18:03:19+00:00",
                    "text": "Hi everyone,\n\nI tried to view the new page as per the instructions via \"jekyll\", but I\ngot a lot of error messages:\n\n$ bundle exec jekyll serve --watch\nConfiguration file: none\n            Source: /cygdrive/d/fortran/fortran-lang/fortran-lang.org/learn\n       Destination: /cygdrive/d/fortran/fortran-lang/\nfortran-lang.org/learn/_site\n Incremental build: disabled. Enable with --incremental\n      Generating...\n     Build Warning: Layout 'page' requested in best_practices.md does not\nexist.\n     Build Warning: Layout 'page' requested in building_programs.md does\nnot exist.\n  Liquid Exception: Could not locate the included file 'note.html' in any\nof [\"/cygdrive/d/fortran/fortran-lang/fortran-lang.org/learn/_includes\"].\nEnsure it exists in one of those directories and, if it is a symlink, does\nnot point outside your site source. in index.md\njekyll 3.8.6 | Error:  Could not locate the included file 'note.html' in\nany of [\"/cygdrive/d/fortran/fortran-lang/fortran-lang.org/learn/_includes\"].\nEnsure it exists in one of those directories and, if it is a symlink, does\nnot point outside your site source.\n\nI did a fresh install of Ruby, gems and bundle - there were some complaints\nabout old and deprecated packages, but nothing that seemed serious.\n\nThe file \"note.html\"  it is complaining about does actually exist in the\nsubdirectory _includes.\n\nFor your information: I installed Ruby and its packages on Cygwin.\n\nRegards,\n\nArjen\n\n\nOp vr 22 mei 2020 om 18:54 schreef Arjen Markus <arjen.markus895@gmail.com>:\n\u2026\n Hi everyone,\n\n no problem with me - as long as it is a permissive licence :). The MIT\n licence should do fine and consistency is not unimportance.\n\n Regards,\n\n Arjen\n\n Op vr 22 mei 2020 om 16:44 schreef Laurence Kedward <\n ***@***.***>:\n\n> I am not an expert on the CC licenses, I know some of them are not open\n> source so we have to be very careful to pick the right one.\n>\n> Ah okay, good point - I'm no expert either.\n>\n> What does Rust use for their documentation?\n>\n> It appears to be under the same license as Rust itself which is\n> MIT/Apache2\n> <https://github.com/rust-lang/book/blob/master/CONTRIBUTING.md#licensing>\n> .\n>\n> P.S. I view documentation as code: it's written in Markdown, which\n> literally is a source code that gets parsed and compiled to the final form,\n> whether html or pdf. Also one can then copy and paste example code from the\n> documentation into user projects without problem. So I've always used MIT\n> for documentation. But I am not opposed to other options.\n>\n> This makes sense to me; I'm happy to keep with MIT for consistency then\n> \ud83d\udc4d\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <#77 (comment)>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAN6YR7LVOJEL47USCHNI4DRS2FWNANCNFSM4NBUJL7Q>\n> .\n>"
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 18:06:27+00:00",
                    "text": "Oh, now I see the problem - it looks at \"learn/_includes\", not \"_includes\".\nHm.\n\nRegards,\n\nArjen\n\nOp vr 22 mei 2020 om 20:03 schreef Arjen Markus <arjen.markus895@gmail.com>:\n\u2026\n Hi everyone,\n\n I tried to view the new page as per the instructions via \"jekyll\", but I\n got a lot of error messages:\n\n $ bundle exec jekyll serve --watch\n Configuration file: none\n             Source: /cygdrive/d/fortran/fortran-lang/\n fortran-lang.org/learn\n        Destination: /cygdrive/d/fortran/fortran-lang/\n fortran-lang.org/learn/_site\n  Incremental build: disabled. Enable with --incremental\n       Generating...\n      Build Warning: Layout 'page' requested in best_practices.md does not\n exist.\n      Build Warning: Layout 'page' requested in building_programs.md does\n not exist.\n   Liquid Exception: Could not locate the included file 'note.html' in any\n of [\"/cygdrive/d/fortran/fortran-lang/fortran-lang.org/learn/_includes\"].\n Ensure it exists in one of those directories and, if it is a symlink, does\n not point outside your site source. in index.md\n jekyll 3.8.6 | Error:  Could not locate the included file 'note.html' in\n any of [\"/cygdrive/d/fortran/fortran-lang/fortran-lang.org/learn/_includes\"].\n Ensure it exists in one of those directories and, if it is a symlink, does\n not point outside your site source.\n\n I did a fresh install of Ruby, gems and bundle - there were some\n complaints about old and deprecated packages, but nothing that seemed\n serious.\n\n The file \"note.html\"  it is complaining about does actually exist in the\n subdirectory _includes.\n\n For your information: I installed Ruby and its packages on Cygwin.\n\n Regards,\n\n Arjen\n\n\n Op vr 22 mei 2020 om 18:54 schreef Arjen Markus ***@***.***\n >:\n\n> Hi everyone,\n>\n> no problem with me - as long as it is a permissive licence :). The MIT\n> licence should do fine and consistency is not unimportance.\n>\n> Regards,\n>\n> Arjen\n>\n> Op vr 22 mei 2020 om 16:44 schreef Laurence Kedward <\n> ***@***.***>:\n>\n>> I am not an expert on the CC licenses, I know some of them are not open\n>> source so we have to be very careful to pick the right one.\n>>\n>> Ah okay, good point - I'm no expert either.\n>>\n>> What does Rust use for their documentation?\n>>\n>> It appears to be under the same license as Rust itself which is\n>> MIT/Apache2\n>> <https://github.com/rust-lang/book/blob/master/CONTRIBUTING.md#licensing>\n>> .\n>>\n>> P.S. I view documentation as code: it's written in Markdown, which\n>> literally is a source code that gets parsed and compiled to the final form,\n>> whether html or pdf. Also one can then copy and paste example code from the\n>> documentation into user projects without problem. So I've always used MIT\n>> for documentation. But I am not opposed to other options.\n>>\n>> This makes sense to me; I'm happy to keep with MIT for consistency then\n>> \ud83d\udc4d\n>>\n>> \u2014\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub\n>> <#77 (comment)>,\n>> or unsubscribe\n>> <https://github.com/notifications/unsubscribe-auth/AAN6YR7LVOJEL47USCHNI4DRS2FWNANCNFSM4NBUJL7Q>\n>> .\n>>\n>"
                },
                {
                    "user": "certik",
                    "date": "2020-05-22 18:14:55+00:00",
                    "text": "@arjenmarkus did you figure it out?\nI struggle with Jekyll too. See also #89."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-22 18:17:34+00:00",
                    "text": "@arjenmarkus we can also build a live preview from a pull request. Here's what you need to do:\n\nFork this repository\nClone your fork (not this repo), that would be https://github.com/arjenmarkus/fortran-lang.org\nAdd your content locally, commit it, then push to your repo on GitHub.\nWhen you navigate back to this repo, there will be a button suggesting you to open a pull request\nIn pull request dialog, check the box that says \"allow edits from reviewers\" (or similar).\n\nand we can make sure it previews correctly from there."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 18:35:39+00:00",
                    "text": "Hi everyone,\n\nthe problem was (apparently) that I started jekyll in the subdirectory\n\"learn\" rather than the root. Now it works fine, that is. under \"Learn\" I\nonly see the contents of \"index.md\". I f I specify the paths\nlearn/best_practices and learn/build_programs I can see those pages. So,\naccessing those pages is not entirely correct yet.\n\nWell, with that solved and after a look at the page I will now proceed with\nthe pull request :).\n\nRegards,\n\nArjen\n\nOp vr 22 mei 2020 om 20:17 schreef Milan Curcic <notifications@github.com>:\n\u2026\n @arjenmarkus <https://github.com/arjenmarkus> we can also build a live\n preview from a pull request. Here's what you need to do:\n\n    1. Fork this repository\n    2. Clone your fork (not this repo), that would be\n    https://github.com/arjenmarkus/fortran-lang.org\n    3. Add your content locally, commit it, then push to your repo on\n    GitHub.\n    4. When you navigate back to this repo, there will be a button\n    suggesting you to open a pull request\n    5. In pull request dialog, check the box that says \"allow edits from\n    reviewers\" (or similar).\n\n and we can make sure it previews correctly from there.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YR3XFBTIN6XBKRGXSPDRS26UXANCNFSM4NBUJL7Q>\n ."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 18:56:08+00:00",
                    "text": "Hi Milan, everyone,\n\nI have now cloned the repository and created a branch\n\"building_programs\". The pull request is there.\n\nThe repository is public, so I guess you can see it and submit your\ncomments etc. I hope I did all that correctly :).\n\nRegards,\n\nArjen\n\nOp vr 22 mei 2020 om 20:17 schreef Milan Curcic <notifications@github.com>:\n\u2026\n\n @arjenmarkus we can also build a live preview from a pull request. Here's what you need to do:\n\n Fork this repository\n Clone your fork (not this repo), that would be https://github.com/arjenmarkus/fortran-lang.org\n Add your content locally, commit it, then push to your repo on GitHub.\n When you navigate back to this repo, there will be a button suggesting you to open a pull request\n In pull request dialog, check the box that says \"allow edits from reviewers\" (or similar).\n\n and we can make sure it previews correctly from there.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or unsubscribe."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-22 19:06:32+00:00",
                    "text": "Almost there. It looks like you created a pull request in your own repository (arjenmarkus/fortran-lang.org).\nInstead, create a pull request in this repository (fortran-lang/fortran-lang.org) by navigating to its home page and clicking on the \"New pull request\" button.\nI don't know if this matters, but I also see that your fortran-lang.org repository doesn't appear as a fork. Did you create it by clicking the \"Fork\" button on this repository?"
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 19:12:11+00:00",
                    "text": "Hi Milan,\n\nI thought I had created a fork. Hm, let me redo that. (It does not seem\npossible to create a pull request based on the one I just created).\nHopefully I will get it right this time.\n\nRegards,\n\nArjen\n\nOp vr 22 mei 2020 om 21:06 schreef Milan Curcic <notifications@github.com>:\n\u2026\n Almost there. It looks like you created a pull request in your own\n repository (arjenmarkus/fortran-lang.org).\n\n Instead, create a pull request in this repository\n <https://github.com/fortran-lang/fortran-lang.org> (fortran-lang/\n fortran-lang.org) by navigating to its home page and clicking on the \"New\n pull request\" button.\n\n I don't know if this matters, but I also see that your fortran-lang.org\n repository doesn't appear as a fork. Did you create it by clicking the\n \"Fork\" button on this repository?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#77 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAN6YR662YRNGPREGQIAOGLRS3EMNANCNFSM4NBUJL7Q>\n ."
                },
                {
                    "user": "arjenmarkus",
                    "date": "2020-05-22 19:26:46+00:00",
                    "text": "No, I had created a repository in my personal space and imported the\nfortran-lang.org repository. What I should have done is go to the home page\nof fortran-lang.org and use the \"Fork\" option from there. Well, hopefully\nit is all right now :). I think this will be the last e-mail from me for\ntoday.\n\nRegards,\n\nArjen\n\nOp vr 22 mei 2020 om 21:11 schreef Arjen Markus <arjen.markus895@gmail.com>:\n\u2026\n Hi Milan,\n\n I thought I had created a fork. Hm, let me redo that. (It does not seem\n possible to create a pull request based on the one I just created).\n Hopefully I will get it right this time.\n\n Regards,\n\n Arjen\n\n Op vr 22 mei 2020 om 21:06 schreef Milan Curcic ***@***.***\n >:\n\n> Almost there. It looks like you created a pull request in your own\n> repository (arjenmarkus/fortran-lang.org).\n>\n> Instead, create a pull request in this repository\n> <https://github.com/fortran-lang/fortran-lang.org> (fortran-lang/\n> fortran-lang.org) by navigating to its home page and clicking on the\n> \"New pull request\" button.\n>\n> I don't know if this matters, but I also see that your fortran-lang.org\n> repository doesn't appear as a fork. Did you create it by clicking the\n> \"Fork\" button on this repository?\n>\n> \u2014\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <#77 (comment)>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAN6YR662YRNGPREGQIAOGLRS3EMNANCNFSM4NBUJL7Q>\n> .\n>"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-22 19:41:31+00:00",
                    "text": "@arjenmarkus Yes, that worked! Thank you! I will review it in detail over the weekend."
                }
            ]
        },
        {
            "number": 76,
            "user": "certik",
            "date": "2020-05-14 22:36:54+00:00",
            "title": "Add the MESA code",
            "text": "I first heard about it here:\nhttps://news.ycombinator.com/item?id=23160114",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-15 07:36:39+00:00",
                    "text": "This code looks impressive: last release in March 2020, it uses modern Fortran with OpenMP and it has an informative website! This should definitely be listed!\nyaml entry looks good to me \ud83d\udc4d"
                },
                {
                    "user": "certik",
                    "date": "2020-05-15 18:25:20+00:00",
                    "text": "@LKedward yes, exactly. There might be a few more codes like this out there.\nAs discussed before, I think this code is not something that is probably super easy to use in other projects. However, I want it in to proudly show that Fortran is still used in actively maintained codes as the main language and for the community to see this and to perhaps learn some stuff how they do, and they can learn some stuff from other such projects."
                }
            ]
        },
        {
            "number": 75,
            "user": "certik",
            "date": "2020-05-14 20:24:44+00:00",
            "title": "Change the name to HPE / Cray",
            "text": "",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-05-14 20:30:10+00:00",
                    "text": "I think @longb mentioned on the call that they still use Cray for software products. Should we rather call this \"Cray (HPE)\". That way it's clear that it's what people know as Cray, while still acknowledging the parent company. Bill, how would you word this?"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-14 20:39:43+00:00",
                    "text": "Otherwise, it's fine with me. My earlier comment is a super minor nit pick. We can always improve it later."
                },
                {
                    "user": "certik",
                    "date": "2020-05-14 20:41:23+00:00",
                    "text": "I am going to merge it, and if Bill suggests a different wording, we'll change it.\nI plan to contact each company anyway to approve the wording for their compiler, I just didn't have time yet."
                },
                {
                    "user": "longb",
                    "date": "2020-05-14 20:43:20+00:00",
                    "text": "On May 14, 2020, at 3:30 PM, Milan Curcic ***@***.***> wrote:\n\n\n I think @longb mentioned on the call that they still use Cray for software products.\nCorrect. As the page correctly indicates, the old HP compiler is not longer being maintained.  The Cray compilers are being ported to the more modern HPE hardware, such as Apollo.\n Should we rather call this \"Cray (HPE)\". That way it's clear that it's what people know as Cray, while still acknowledging the parent company. Bill, how would you word this?\nI\u2019ll ask the manager in the know.  At least for Fortran, everyone still thinks of it as the \u201cCray compiler\u201d.    However, \u201cCray\u201d by itself (as a company) probably needs qualification.\n\nCheers,\nBill\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub, or unsubscribe.\n\nBill Long                                                                       longb@cray.com\nPrincipal Engineer, Fortran Technical Support &   voice:  651-605-9024\nBioinformatics Software Development                      fax:  651-605-9143\nCray, a Hewlett Packard Enterprise company/ 2131 Lindau Lane/  Suite 1000/  Bloomington, MN  55425"
                }
            ]
        },
        {
            "number": 74,
            "user": "p-costa",
            "date": "2020-05-13 20:55:13+00:00",
            "title": "nitpicking :)",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-13 21:17:11+00:00",
                    "text": "Thanks for noticing and fixing it @p-costa."
                }
            ]
        },
        {
            "number": 73,
            "user": "LKedward",
            "date": "2020-05-13 11:15:33+00:00",
            "title": "Fix LAPACK package entry",
            "text": "The github entry should be:\nReference-LAPACK/lapack\nand license is BSD 3-Clause.",
            "comments": []
        },
        {
            "number": 72,
            "user": "certik",
            "date": "2020-05-12 23:03:34+00:00",
            "title": "Add a category \"contains Fortran\"",
            "text": "We should add a new category:\n\nCodes that contain some Fortran code, but Fortran is not the primary development language (either has never been, or is not anymore) as judged from the latest commits in the last few years. It does not matter in terms of lines if the Fortran code is a majority or minority.\n\nWhat this category will show is what projects depend on Fortran, even if only as \"clients\". All those projects will benefit from any improvement we will do for the Fortran ecosystem, even if indirectly.\nHere I found libraries that fit exactly into this category:\n\nhttps://github.com/scipy/scipy\nhttps://github.com/xianyi/OpenBLAS\n\nAnd I think many of these fit there also (they all have Fortran code inside, but I suspect Fortran is not the primary development language):\n\nhttps://github.com/keflavich/plfit\nhttps://github.com/kthyng/tracpy\nhttps://github.com/dfm/python-fsps\nhttps://github.com/sonofeft/RocketCEA\nhttps://github.com/pvthinker/Fluid2d\nhttps://github.com/stfc/PSyclone\nhttps://github.com/mancellin/capytaine\n\nI am sure there are many more such projects.",
            "comments": []
        },
        {
            "number": 71,
            "user": "certik",
            "date": "2020-05-12 22:44:25+00:00",
            "title": "Remove OpenBLAS",
            "text": "The package does not satisfy our criteria, in particular:\nRelevance\n\nthe package must be primarily implemented in Fortran\nor provide a complete Fortran interface to an existing package\nor be purposed solely towards software development in Fortran.\n\nNone of these apply. They do not provide a Fortran interface to another\npackage, and OpenBLAS is not purposed solely towards software\ndevelopment in Fortran. Regarding the first bullet point, the package is\nprimarily developed in assembly, all new code is in assembly. Fortran is\nnot the primary implementation language, despite technically having more\nlines than their implementation language (assembly).\nThey have a lot of Fortran code (in fact the majority of lines) because\nthey have several copies of LAPACK. They keep applying fixes from\nreference LAPACK (which is already included in our index, so we should\nnot be including it twice). OpenBLAS is in the same category as SciPy.\nThey copied a mature Fortran project / code, but use a different\nlanguage to further develop the package (assembly and Python\nrespectively). In the SciPy's case, the Python code now has more lines\nthan Fortran, in OpenBLAS case the assembly code does not yet have more\nlines, but eventually it will.\nUniqueness\n\nthe package shall not be a fork or minor revision of existing packages\n\nAs far as Fortran is concerned, this package is just a fork of LAPACK.\nThere is no new Fortran code that isn't in LAPACK that other projects\ncould use.\n\nWe can think (see #72) if we should have categories for projects that happen to\nhave Fortran code included, even it is not further developed. OpenBLAS\nand SciPy would be two major libraries to include there. Until then, we\nshould remove OpenBLAS from our listing.",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 23:10:11+00:00",
                    "text": "Indeed OpenBLAS doesn't expose Fortran bindings to its capability. I had assumed it did, but never checked. Fortran code is truly just a dependency here. If we made Fortran bindings to say, libcurl, which would then be a dependency, we wouldn't call the bindings a C project.\nI agree with removing it."
                },
                {
                    "user": "certik",
                    "date": "2020-05-12 23:13:03+00:00",
                    "text": "I think OpenBLAS is be exposing its functionality into Fortran using the Lapack interface. But it would be like we took libcurl, and rewrote some internal subroutines into Fortran, and only used Fortran to keep improving over libcurl --- that would not be a C project anymore."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 23:24:02+00:00",
                    "text": "I didn't get that impression from the documentation. They expose a C interface to Fortran code. They don't expose a Fortran interface to their C and Assembly code."
                },
                {
                    "user": "certik",
                    "date": "2020-05-12 23:32:37+00:00",
                    "text": "Yes, I think we are both saying the same thing.\n\nFurthermore even if they exposed Fortran code to their assembly, it wouldn't make it a Fortran project.\n\u2026\nOn Tue, May 12, 2020, at 5:24 PM, Milan Curcic wrote:\n\n\n I didn't get that impression from the documentation\n <https://github.com/xianyi/OpenBLAS/wiki/User-Manual>. They expose a C\n interface to Fortran code. They don't expose a Fortran interface to\n their C and Assembly code.\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#71 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWB6RT7THWFLUL7DACDRRHLB5ANCNFSM4M7HMK5A>."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 23:37:10+00:00",
                    "text": "Furthermore even if they exposed Fortran code to their assembly, it wouldn't make it a Fortran project.\n\nIt wouldn't be strictly a \"Fortran project\", but it would qualify to list it in the registry because:\n\nor provide a complete Fortran interface to an existing package\n\nIf OpenBLAS had Fortran bindings to its unique value (that is not reference BLAS and LAPACK), it would be very important to include it."
                },
                {
                    "user": "certik",
                    "date": "2020-05-13 00:47:18+00:00",
                    "text": "I see, so it would be in the interfaces section.\n\nI need to check, maybe they provide an interface.\n\nThe interfaces is a special section.\n\nFor me the main value of our Packages section is to show and promote codes that are actively developed in Fortran, to show the Fortran community that there are open source codes out there and to connect us together. And to show some success stories to motivate us.\n\nThe interfaces section is a secondary goal for me, those are useful to have and use obviously. But I don't view these as Fortran codes, although they would obviously be packaged by fpm later on.\nSort of like the issue #72 which I think is also very useful to have. But these are not Fortran packages in my understanding of the word.\n\u2026\nOn Tue, May 12, 2020, at 5:37 PM, Milan Curcic wrote:\n\n\n > Furthermore even if they exposed Fortran code to their assembly, it wouldn't make it a Fortran project.\n\n It wouldn't be strictly a \"Fortran project\", but it would qualify to\n list it in the registry because:\n\n > or provide a complete Fortran interface to an existing package\n\n If OpenBLAS had Fortran bindings to its unique value (over reference\n BLAS and LAPACK), it would be very important to include it.\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#71 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWE3UJDY6AE6A2FGAF3RRHMTFANCNFSM4M7HMK5A>."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-13 11:10:41+00:00",
                    "text": "I agree that according to our criteria, unless OpenBLAS contains explicit Fortran interfaces, it should not be listed.\n\nFor me the main value of our Packages section is to show and promote codes that are actively developed in Fortran, to show the Fortran community that there are open source codes out there and to connect us together. And to show some success stories to motivate us. The interfaces section is a secondary goal for me, those are useful to have and use obviously. But I don't view these as Fortran codes, although they would obviously be packaged by fpm later on. Sort of like the issue #72 which I think is also very useful to have.\n\nI have a different view of the Packages section: it is already well-accepted that many large applications (mainly scientific) are actively developed in Fortran. What is less accepted is that Fortran is a suitable language and has a sufficient ecosystem for developing new codes.\nThe Packages section shows off the large offering of Fortran libraries that are available to support code development - this is because someone looking to develop in Fortran will interested in what libraries already exist to make their life easier. As part of this, the interfaces category is absolutely essential.\nTo summarise my view:\n\n\nThe existence of large scientific codes already written in Fortran is unlikely to heavily influence someone to choose Fortran for their new project (unless they want to link against them);\n\n\nRather, the ecosystem (libraries, tools and community) are much more of an influencing factor;\n\n\nIn the absence of an online package registry, the packages section serves this purpose.\n\n\n\nBut these are not Fortran packages in my understanding of the word.\n\nIf they contain c-binding interfaces written in Fortran, then I consider them Fortran regardless of whether they implement functionality or not. (Creating a c-binding module can be a lot work)"
                },
                {
                    "user": "certik",
                    "date": "2020-05-13 13:36:59+00:00",
                    "text": "OpenBLAS can be used from Fortran easily just like any other LAPACK implementation. I've done it.\n\nIt doesn't contain modern Fortran interfaces for linear algebra like we are creating in stdlib, but it nevertheless works from Fortran.\n\nSo I would say it qualifies for the interfaces section. It's a package that you can use from Fortran.\n\nGood points. It looks like the purpose of the Package section is twofold. In the broader sense to show what packages are readily available to use in Fortran. And in the narrower sense to show that Fortran is used to develop new open source code. Everything except interfaces qualifies for the second point.\n\u2026\nOn Wed, May 13, 2020, at 5:10 AM, Laurence Kedward wrote:\n\n\n I agree that according to our criteria, unless OpenBLAS contains\n explicit Fortran interfaces, it should not be listed.\n\n > For me the main value of our Packages section is to show and promote codes that are actively developed in Fortran, to show the Fortran community that there are open source codes out there and to connect us together. And to show some success stories to motivate us. The interfaces section is a secondary goal for me, those are useful to have and use obviously. But I don't view these as Fortran codes, although they would obviously be packaged by fpm later on. Sort of like the issue #72 <#72> which I think is also very useful to have.\n\n *I have a different view of the Packages section:* it is already\n well-accepted that many large applications (mainly scientific) are\n actively developed in Fortran. What is less accepted is that Fortran is\n a suitable language and has a sufficient ecosystem for *developing new\n codes*.\n  The Packages section shows off the large offering of Fortran libraries\n that are available to support code development - this is because\n someone looking to develop in Fortran will interested in what libraries\n already exist to make their life easier. As part of this, the\n interfaces category is absolutely essential.\n\n To summarise my view:\n\n  * The existence of large scientific codes already written in Fortran\n is unlikely to heavily influence someone to choose Fortran for their\n new project (unless they want to link against them);\n\n  * Rather, the ecosystem (libraries, tools and community) are much more\n of an influencing factor;\n\n  * In the absence of an online package registry, the packages section\n serves this purpose.\n\n > But these are not Fortran packages in my understanding of the word.\n\n If they contain c-binding interfaces written in Fortran, then I\n consider them Fortran regardless of whether they implement\n functionality or not. (Creating a c-binding module can be a lot work)\n\n \u2014\n You are receiving this because you authored the thread.\n Reply to this email directly, view it on GitHub\n <#71 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWCHGOVZAYOWKCSFQJTRRJ54BANCNFSM4M7HMK5A>."
                },
                {
                    "user": "certik",
                    "date": "2020-05-13 14:32:38+00:00",
                    "text": "So I think I vote to move OpenBLAS to interfaces.\nThis is unlike SciPy, as SciPy cannot directly be used in Fortran, while OpenBLAS can."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-13 15:12:56+00:00",
                    "text": "Okay, if that's the case, I'm okay with keeping it in \"Interfaces\". I am still concerned that I couldn't find OpenBLAS documentation on Fortran bindings, and I had assumed that if you're just calling Fortran LAPACK included OpenBLAS, you're not gaining anything over reference LAPACK. But I trust @certik and if he says that OpenBLAS has a meaningful and useful Fortran binding, I'm okay with it.\nI want to also caution about the \"Interfaces\" category. If you looked at our existing categories, you'll see that \"Interfaces\" is the only category that says \"how something works\" rather than \"what it does\".\nSimilar to @LKedward, for me by far the main purpose of this page is for new developers to be able to find the tool they need for their Fortran work. Not so much for us to prove there are pure Fortran packages out there, or to be proud of it. That too is important, but is secondary to me.\nIn that sense, when a newcomer to Fortran arrives to the packages page, the \"Interfaces\" category is the only one that doesn't really tell them what's in there, only that the packages in there are bindings to other languages. However, I don't think this category is necessarily harmful, and is okay to keep it."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-13 15:23:59+00:00",
                    "text": "So I think I vote to move OpenBLAS to interfaces.\n\nOkay I see your point here, we should keep it.\n\nI am still concerned that I couldn't find OpenBLAS documentation on Fortran bindings, and I had assumed that if you're just calling Fortran LAPACK included OpenBLAS, you're not gaining anything over reference LAPACK.\n\nMy understanding is that all the LAPACK interfaces are purely explicit (explicit shape etc.) so they don't need explicit Fortran interfaces to be visible to the calling code.\n(Presumably because LAPACK predates the iso c binding)\nAs to OpenBLAS usefulness, I only ever use OpenBLAS because it is significantly faster than the reference LAPACK."
                },
                {
                    "user": "certik",
                    "date": "2020-05-13 16:24:51+00:00",
                    "text": "As @LKedward said, OpenBLAS does not provide new functionality (as far as I know), but the main purpose of it is that it provides a drop in replacement for LAPACK that is much faster, as in, one of the fastest out there. It's a great library.\nYes, LAPACK predates iso_c_binding, and OpenBLAS just follows what LAPACK does. The tradition there is to just provide the symbols and hope that they work (but they do in practice, even if I don't recommend to do that for new projects).\nSo let's put it into into interfaces.\nI think we are in agreement --- for you and @LKedward the main purpose is to list packages that are useful for Fortran developers to use. For me that is part of it. But equally important for me is to leverage our community and connect us to each other and to show what is out there, and showing how Fortran can be used --- because I think we absolutely have to prove that Fortran can be used for new projects and for new developments. That Fortran is not just for wrapping other languages and for legacy codes."
                },
                {
                    "user": "certik",
                    "date": "2020-05-14 21:21:03+00:00",
                    "text": "I am going back and forth on this. Maybe OpenBLAS can stay where it currently is, right next to LAPACK:\nhttps://fortran-lang.org/packages/numerical\nThey both provide the same functionality, both can readily be used from Fortran, and OpenBLAS provides a much faster implementation.\nI viewed the Package list as packages written in Fortran, but since both of you @milancurcic and @LKedward see it as packages that can be directly used from Fortran, then we don't care what the primary implementation language is.\nI would say that OpenBLAS satisfies this bullet point:\n\nor provide a complete Fortran interface to an existing package\n\nSince it provides the complete Fortran interface to their very fast (assembly+Fortran) implementation of LAPACK. As discussed, the interface is not iso_c_binding interface, but it's the old fashioned LAPACK interface. However it works.\nSo I am going to close this PR, I think OpenBLAS can stay where it is. And our understanding of the Packages section then must be: any package that can be used from Fortran right away."
                }
            ]
        },
        {
            "number": 70,
            "user": "certik",
            "date": "2020-05-12 22:24:18+00:00",
            "title": "Change categories for fgsl and SciFortran",
            "text": "They are both SciPy like libraries, and so should belong into\n\"numerical\". The Scientific Codes category I think should be reserved\nfor more of end user applications or physics solvers, not purely\nnumerical libraries.",
            "comments": []
        },
        {
            "number": 69,
            "user": "certik",
            "date": "2020-05-12 20:09:59+00:00",
            "title": "Arpack: fix version and license",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-12 20:28:48+00:00",
                    "text": "Weird, the website now says version not found, but there are releases for Arpack."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-12 20:38:55+00:00",
                    "text": "Weird, the website now says version not found, but there are releases for Arpack.\n\nNot sure why this is happening - I'll look into it."
                }
            ]
        },
        {
            "number": 68,
            "user": "certik",
            "date": "2020-05-12 19:51:28+00:00",
            "title": "Add packages from List-of-popular-open-source-Fortran-projects",
            "text": "Go over:\nhttps://github.com/fortran-lang/stdlib/wiki/List-of-popular-open-source-Fortran-projects\nand add the rest of the packages.",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-12 20:19:44+00:00",
                    "text": "OpenBLAS\n fortran-machine\n LAPACK\n ElmerFEM\n WRF\n fds\n functional-fortran\n Quantum ESPRESSO\n fluidity\n fortranlib\n json-fortran\n Nek5000\n cp2k\n fortran2018-examples\n NASTRAN-95\n specfem3d\n NWChem\n gtk-fortran\n CFL3D\n fortran-utils\n SHTOOLS\n OpenCoarrays\n arpack-ng\n DFTB+\n NASTRAN-93\n MPAS\n neural-fortran\n NetCDF-Fortran\n CTSM\n Castro\n ABINIT\n FLAP\n bspline-fortran\n FOODIE\n forpy\n OFF\n WAVEWATCH III\n MOM6\n VTKFortran\n datetime-fortran\n node-fortran\n Fortran-Astrodynamics-Toolkit\n pyplot-fortran\n Starlink\n WPS\n ogpf\n pFUnit\n tcp-client-server\n ftl\n fgsl\n OpenCMISS\n StringiFor\n wrf_hydro_nwm_public\n SciFortran\n bandup\n LaGriT\n stdlib\n clfortran\n fox\n HANDE-QMC\n FEconv\n lesgo\n FortranPatterns\n FV3-GFS\n coretran\n tsunami\n fdict\n CFD\n ICAR\n MODFLOW6\n PIC Skeleton Codes\n IAMR\n ADflow\n PoisFFT\n sigma\n aenet\n DBCSR\n GALAHAD\n node.fortran\n h5fortran\n kdtree2\n numerical-methods-fortran\n TRACMASS\n CompDam\n Flexi\n GFR\n OpenSWPC\n ROMS\n slsqp\n Truchas\n fortran-csv-module\n FMS\n SNAP\n freeCappuccino"
                }
            ]
        },
        {
            "number": 67,
            "user": "certik",
            "date": "2020-05-12 19:47:54+00:00",
            "title": "Packages: add Quantum ESPRESSO",
            "text": "",
            "comments": []
        },
        {
            "number": 66,
            "user": "certik",
            "date": "2020-05-12 19:46:37+00:00",
            "title": "Packages: add Castro",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-12 19:57:56+00:00",
                    "text": "@LKedward what does version: none do? I added the actual version instead."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-12 20:01:05+00:00",
                    "text": "@LKedward what does version: none do? I added the actual version instead.\n\nIt hides the version badge - otherwise it shows an error if it can't find a github version.\nI've just realised this repo does have github realises so you don't need the version field, my mistake.\nIt will look like this:\n\n(https://img.shields.io/github/v/release/AMReX-Astro/Castro?color=green)"
                },
                {
                    "user": "certik",
                    "date": "2020-05-12 20:05:56+00:00",
                    "text": "@LKedward I see, thanks for the info and the reviews."
                }
            ]
        },
        {
            "number": 65,
            "user": "certik",
            "date": "2020-05-12 19:37:59+00:00",
            "title": "Packages: add ABINIT",
            "text": "",
            "comments": []
        },
        {
            "number": 64,
            "user": "certik",
            "date": "2020-05-12 19:31:19+00:00",
            "title": "Add a CI",
            "text": "When a new PR is submitted a CI should run to check that the website can be built. This is especially critical for new package submissions to ensure the yaml is properly formatted.",
            "comments": []
        },
        {
            "number": 63,
            "user": "certik",
            "date": "2020-05-12 19:24:14+00:00",
            "title": "Packages: add dftatom",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-12 19:50:41+00:00",
                    "text": "When I click on Merge, nothing happens. That's ridiculous. I'll try again later."
                }
            ]
        },
        {
            "number": 62,
            "user": "certik",
            "date": "2020-05-12 19:16:25+00:00",
            "title": "Packages: add Truchas",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-12 19:22:41+00:00",
                    "text": "@nncarlson can you please review this?"
                },
                {
                    "user": "nncarlson",
                    "date": "2020-05-12 22:00:20+00:00",
                    "text": "Good to me, though I'm not sure about the \"version 3.0\" bit.  That's the the last official tarball we rolled, but it's very old and no one should use it.  Everyone works off the master branch version.  I've done a bad job of managing versioning (help @certik :-)."
                },
                {
                    "user": "certik",
                    "date": "2020-05-12 22:14:05+00:00",
                    "text": "Ok, I removed the version. I am going to merge it now. Thanks @nncarlson for reviewing. Yes, we need to fix the Truchas's release process."
                }
            ]
        },
        {
            "number": 61,
            "user": "milancurcic",
            "date": "2020-05-12 18:21:15+00:00",
            "title": "add f03gl and PLplot",
            "text": "Submitting 2 graphics libraries to the registry. I couldn't find the PR template for this. Do we have any?",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-12 18:36:39+00:00",
                    "text": "Submitting 2 graphics libraries to the registry. I couldn't find the PR template for this. Do we have any?\n\nNo PR template yet"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 18:38:48+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-12 18:39:37+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/61/"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 18:40:30+00:00",
                    "text": "Preview doesn't seem to work."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-12 18:42:12+00:00",
                    "text": "Preview doesn't seem to work.\n\nWorking for me:"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 18:44:27+00:00",
                    "text": "It does for me as well now."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 18:46:54+00:00",
                    "text": "Regarding versions: f03gl indeed didn't have a version and we don't want to show a version none badge. However, PLplot does (5.15.0, I forgot to include it). Why wouldn't we show version for non-GH projects that have one?"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-12 18:48:21+00:00",
                    "text": "Sorry I didn't mean for all non-github repos, just those without explicit versions"
                },
                {
                    "user": "certik",
                    "date": "2020-05-12 18:50:49+00:00",
                    "text": "Here is what we have to go over: https://github.com/fortran-lang/fortran-lang.org/blob/8f74576faef57a6da975195ffda8da85402b1ba9/PACKAGES.md"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 18:52:02+00:00",
                    "text": "@certik I did, feel free to check it as well."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-12 18:52:40+00:00",
                    "text": "Here is what we have to go over: https://github.com/fortran-lang/fortran-lang.org/blob/8f74576faef57a6da975195ffda8da85402b1ba9/PACKAGES.md\n\nI'm happy these packages meet all the criteria discussed \ud83d\udc4d"
                },
                {
                    "user": "certik",
                    "date": "2020-05-12 18:55:19+00:00",
                    "text": "Have you tried installing the packages and do they work? I haven't checked the \"Maturity\" section.\nI am hoping that fpm will help with libraries like these, to make them easy to install, part of the wide Fortran ecosystem and also have usage statistic at the registry webpage, and so on.\nI am fine adding them."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 19:02:08+00:00",
                    "text": "Have you tried installing the packages and do they work? I haven't checked the \"Maturity\" section.\n\nYes for f03gl, no for PLplot.\nHave you looked at PLplot? This may be among the most mature libraries in the registry (contributions go back to 1992): https://www.openhub.net/p/plplot/contributors/summary"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 19:02:38+00:00",
                    "text": "Thank you both, merging."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-12 19:02:57+00:00",
                    "text": "#delete_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-12 19:03:24+00:00",
                    "text": "The preview build for this PR has now been deleted."
                }
            ]
        },
        {
            "number": 60,
            "user": "LKedward",
            "date": "2020-05-07 17:04:04+00:00",
            "title": "Fix: preview build action checkout.",
            "text": "",
            "comments": []
        },
        {
            "number": 59,
            "user": "LKedward",
            "date": "2020-05-07 16:58:43+00:00",
            "title": "Fix: preview build action.",
            "text": "",
            "comments": []
        },
        {
            "number": 58,
            "user": "LKedward",
            "date": "2020-05-07 16:55:14+00:00",
            "title": "Fix: preview action PR checkout.",
            "text": "Checkout the PR ref manually.",
            "comments": []
        },
        {
            "number": 57,
            "user": "LKedward",
            "date": "2020-05-07 16:02:28+00:00",
            "title": "Fix: pr preview action.",
            "text": "Checkout pull request head and fix comment action.",
            "comments": []
        },
        {
            "number": 56,
            "user": "LKedward",
            "date": "2020-05-07 15:48:48+00:00",
            "title": "Change PR preview trigger to comment.",
            "text": "PR preview builds are triggered by a pull request\ncomment containing '#build_preview'.",
            "comments": []
        },
        {
            "number": 55,
            "user": "LKedward",
            "date": "2020-05-07 14:54:35+00:00",
            "title": "Fix: minor typo on compilers page.",
            "text": "This small PR will test PR preview functionality.",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-07 15:51:03+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 16:04:03+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-07 16:05:17+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/55/"
                },
                {
                    "user": "certik",
                    "date": "2020-05-07 16:37:01+00:00",
                    "text": "@LKedward thanks for setting it up! Note that it does not seem to work, the PR link shows the website with the word \"Discountinued\", which you fixed in this PR."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 16:39:38+00:00",
                    "text": "Hmm, seems to me like it works--both link here and link on the preview website."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 16:41:18+00:00",
                    "text": "@LKedward thanks for setting it up! Note that it does not seem to work, the PR link shows the website with the word \"Discountinued\", which you fixed in this PR.\n\nYep you are right - the action is not checking out the right commit, currently looking for a solution."
                },
                {
                    "user": "certik",
                    "date": "2020-05-07 16:42:39+00:00",
                    "text": "@milancurcic it does not work for me, see the screenshot:"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 16:43:13+00:00",
                    "text": "Got it, nevermind, I totally misunderstood."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 16:56:49+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 17:00:11+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 17:05:56+00:00",
                    "text": "this is the one...\n#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-07 17:06:56+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/55/"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 17:14:52+00:00",
                    "text": "Okay, I think this is finally working!\n@milancurcic and @certik apologies for the large number of notifications you have probably received in the last hour!\nLast thing to test is that both of you can also trigger a build by commenting '#build_preview'."
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-07 17:15:59+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/55/"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 17:22:02+00:00",
                    "text": "#build_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-07 17:23:10+00:00",
                    "text": "This PR has been built with Jekyll and can be previewed at: https://fortran-lang.org/pr/55/"
                },
                {
                    "user": "certik",
                    "date": "2020-05-07 17:27:44+00:00",
                    "text": "I think it's working! Thanks for fixing it @LKedward."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-10 16:40:33+00:00",
                    "text": "#delete_preview"
                },
                {
                    "user": "github-actions[bot]",
                    "date": "2020-05-10 16:40:55+00:00",
                    "text": "The preview build for this PR has now been deleted."
                }
            ]
        },
        {
            "number": 54,
            "user": "LKedward",
            "date": "2020-05-07 12:09:48+00:00",
            "title": "Reapply \"Github actions build & PR preview\" PR",
            "text": "This PR is identical to #46 which was reverted.\n@milancurcic when the repo has been renamed and is serving from 'gh-pages', then this PR can be re-merged.\nResolves #41.\n#no_preview",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-05-07 14:40:26+00:00",
                    "text": "@milancurcic it looks like it's serving from the previously-built gh-pages branch now which is good.\nIf we merge this, the action should rebuild the site with your latest changes."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 14:41:32+00:00",
                    "text": "Yes, but I think we need to rebase+merge, no? Edit: Actually, I may be wrong."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 14:44:56+00:00",
                    "text": "Website looks good and up to date. Great work @LKedward !"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 14:46:48+00:00",
                    "text": "Yep github action completed succesfully \ud83d\udc4d\nCheers @milancurcic !"
                }
            ]
        },
        {
            "number": 53,
            "user": "milancurcic",
            "date": "2020-05-06 00:22:33+00:00",
            "title": "52 add discourse badge",
            "text": "This PR:\n\nAdds Discourse badge and link to the landing page and the sidebar in News and Compilers pages;\nRemoves Stack Exchange reference on the landing page (rationale: I think it's now redundant if we want to have these questions on the Discourse)\nMinor clean up of the mailing list description\n\nFixes #52",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-06 03:27:47+00:00",
                    "text": "+1 to merge, looks good!\n\u2026\nOn Tue, May 5, 2020, at 6:22 PM, Milan Curcic wrote:\n This PR:\n\n  * Adds Discourse badge and link to the landing page and the sidebar in\n News and Compilers pages;\n  * Removes Stack Exchange reference on the landing page (rationale: I\n think it's now redundant if we want to have these questions on the\n Discourse)\n  * Minor clean up of the mailing list description\n Fixes #52\n <#52>\n\n You can view, comment on, or merge this pull request online at:\n\n #53\n\n Commit Summary\n\n  * add discourse badge to landing page and sidebar\n  * remove Stack Exchange pointer from landing page\n  * trim the mailing list description a bit\n File Changes\n\n  * *A* _includes/discourse.html\n <https://github.com/fortran-lang/fortran-lang.github.io/pull/53/files#diff-7e8162ce65434463728971b6d879dc8b> (5)\n  * *M* _includes/mailing_list.html\n <https://github.com/fortran-lang/fortran-lang.github.io/pull/53/files#diff-2bbfd89da94f9b32b63605742d481452> (4)\n  * *M* _includes/news_sidebar.html\n <https://github.com/fortran-lang/fortran-lang.github.io/pull/53/files#diff-29c04d30d4ad9d8bf45e8fafd5608ab2> (2)\n  * *A* assets/img/discourse.png\n <https://github.com/fortran-lang/fortran-lang.github.io/pull/53/files#diff-4c3ad1e15c7e2781bffa97b865406994> (0)\n  * *M* index.html\n <https://github.com/fortran-lang/fortran-lang.github.io/pull/53/files#diff-eacf331f0ffc35d4b482f1d15a887d3b> (6)\n Patch Links:\n\n  * https://github.com/fortran-lang/fortran-lang.github.io/pull/53.patch\n  * https://github.com/fortran-lang/fortran-lang.github.io/pull/53.diff\n \u2014\n You are receiving this because your review was requested.\n Reply to this email directly, view it on GitHub\n <#53>, or\n unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAAFAWE4QX3TQGY3FJPZBQTRQCUVLANCNFSM4M2AOI3A>."
                }
            ]
        },
        {
            "number": 52,
            "user": "milancurcic",
            "date": "2020-05-05 20:46:30+00:00",
            "title": "Add Discourse badge to the landing page",
            "text": "We now have a Discourse instance. Please join and try it out.\nThe website should have a hyperlinked Discourse badge that would allow people who visit the site to discover Discourse. We have an obvious place for this, where we list the mailing list, Twitter, and so on.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-05 20:52:27+00:00",
                    "text": "Thanks for setting it up. For inspiration, here is how Rust and Julia do discourse:\nhttps://users.rust-lang.org/\nhttps://discourse.julialang.org/"
                }
            ]
        },
        {
            "number": 51,
            "user": "milancurcic",
            "date": "2020-05-03 18:13:42+00:00",
            "title": "Revert \"Github actions build & PR preview\"",
            "text": "Reverts #46",
            "comments": []
        },
        {
            "number": 50,
            "user": "certik",
            "date": "2020-05-03 14:14:59+00:00",
            "title": "Contact each compiler vendor to update their text",
            "text": "Here is the list of all Fortran compilers:\nhttps://fortran-lang.org/compilers/\nFor now I just copied the text from their official websites. We should now contact each vendor and see if they would prefer to change the text that appears at the webpage for their compiler. Perhaps they would like to stress that they have free versions for open source, or such.\nWe should limit the text to 100 words, to be fair to everyone. Currently all the texts at the webpage fit into 100 words and that seems like the right size to give enough background for each compiler but not be too long.",
            "comments": []
        },
        {
            "number": 49,
            "user": "certik",
            "date": "2020-05-03 00:15:34+00:00",
            "title": "Make the scope of the mailinglist broader",
            "text": "If you have even better way to word this, go ahead and provide suggestions.\nI want the mailing list to be a place where people can have a general discussion, announcements and other things. Not just to passively receive the latest news (Twitter is much better for that, and we already have a Twitter account).",
            "comments": []
        },
        {
            "number": 48,
            "user": "milancurcic",
            "date": "2020-05-02 19:39:35+00:00",
            "title": "47 mailing list",
            "text": "Adds the mailing list to the landing page and news sidebar.\nIt also makes a few minor imporovements such as add RSS feed to the news sidebar, and adds a heading to the Twitter component for consistency.\nFixes #47",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-05-02 19:49:21+00:00",
                    "text": "Thanks! With Laurence's approval, I'll go ahead and merge. @certik if there are any issues we'll follow-up in another PR."
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 00:20:08+00:00",
                    "text": "See #49."
                }
            ]
        },
        {
            "number": 47,
            "user": "milancurcic",
            "date": "2020-05-02 18:12:38+00:00",
            "title": "Mailing list",
            "text": "Thank you @certik for starting the fortran-lang mailinglist.\nFor everybody else, please see Group Email Addresses on that page for details.\nSpecifically, we should have a subscription link on the website.\nI think a good place is on the landing page in the \"Join us\" section, such that we have, in this order:\n\nSubscribe to the mailing list\nFollow us on Twitter\nContribute on GitHub\nAsk about usage on Stack Exchange\n\nIn addition, it should also be in the sidebar on the news page\n@certik @LKedward Let me know what you think and I can follow up with a PR.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-02 19:14:31+00:00",
                    "text": "I think that looks good. Can you submit a PR? Let's get it done, then we can refine later."
                }
            ]
        },
        {
            "number": 46,
            "user": "LKedward",
            "date": "2020-05-02 15:56:48+00:00",
            "title": "Github actions build & PR preview",
            "text": "This PR aims to resolve #41.\nThe approach here is to use github actions to explicitly build the site on push as opposed to the automatic github Jekyll build used currently; this action builds the site using Jekyll on the master branch and pushes to the 'gh-pages' branch. (Repo settings will therefore need to be changed by admin here to point to 'gh-pages' branch).\nAdditional actions are added for pull requests which are built and pushed to the 'gh-pages' branch under the path 'pr/<pr_number>'; therefore pull requests can be previewed at fortran-lang.org/pr/46/ for example.\nTo enable the 'pr/<pr_number>' sub-path, the site source has been updated such that all internal site links and references are prepended with {{site.baseurl}}, see here for explanation.\nI'm not an expert on github actions so if anyone has more experience and feedback then let me know!\nThis has been tested on a private repo, but I'm not sure if any extra steps are required for this organisation repo.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-02 15:59:31+00:00",
                    "text": "Thanks for this! Yes, that's exactly what we need. How do I test it out?"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-02 16:05:57+00:00",
                    "text": "... How do I test it out?\n\nI'm going to see if I can merge into the master of my fork and demonstrate a working build and PR."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-02 17:08:26+00:00",
                    "text": "Thank you @LKedward! Once you nail down the workflow, please document each step from a developer's point of view, either in a \"How to contribute\" section in README.md, or in CONTRIBUTING.md. I also don't know how this works."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-02 17:23:47+00:00",
                    "text": "Thank you @LKedward! Once you nail down the workflow, please document each step from a developer's point of view, either in a \"How to contribute\" section in README.md, or in CONTRIBUTING.md. I also don't know how this works.\n\nAh yes good point, I'll make sure to document this."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 09:41:43+00:00",
                    "text": "To test this out I have merged into my personal fork:\n\n\nThis is the site built using this github action:\nhttps://lkedward.github.io/fortran-lang.github.io/\n\n\nThis is a pull request preview built with this github action:\nhttps://lkedward.github.io/fortran-lang.github.io/pr/3/\n\nfor this pull request:  LKedward#3\n\n\n\nThe rendered site files (for both the normal site and for PRs) are pushed to the 'gh-pages' orphan branch https://github.com/LKedward/fortran-lang.github.io/tree/gh-pages.\nBefore this can be merged, a 'gh-pages' branch needs to be created in this main repository by an admin as an orphan branch"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 16:01:40+00:00",
                    "text": "Sounds good, I'll go ahead and create the orphan branch."
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 16:14:24+00:00",
                    "text": "@milancurcic if you have time to set this up, please go ahead! I am quite busy today."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 17:55:26+00:00",
                    "text": "@LKedward done. Is this PR ready to merge?"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 18:01:49+00:00",
                    "text": "@LKedward done. Is this PR ready to merge?\n\nCheers @milancurcic, yep I'm happy with it - ready to merge!"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 18:06:02+00:00",
                    "text": "Okay, just merged. Do we now need to have a dummy PR to trigger the build? Notice that the site is currently broken."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 18:09:18+00:00",
                    "text": "Okay, just merged. Do we now need to have a dummy PR to trigger the build? Notice that the site is currently broken.\n\nNo, it's been built and pushed okay.\nCan you check in the repo settings that the github pages are pointing to 'gh-pages' branch.\nLike this:"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 18:12:34+00:00",
                    "text": "Oh no, I think we can't use the gh-pages branch on github.io repos!\nI didn't take this into account here. I think we need to revert since I can't think a solution atm."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 18:12:50+00:00",
                    "text": "I just realized it too:"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 18:16:23+00:00",
                    "text": "Okay I just reverted this PR.\nRegarding a possible solution, could we:\n\nRename this repository so that it's not a user page, for example fortran-lang-website or similar;\nSet it up to serve from gh-pages"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 18:34:19+00:00",
                    "text": "Okay I just reverted this PR.\n\nThanks.\nOkay it looks like we have to do 1 but keep this repo:\nSo the current repo contents is moved to a separate repository and the github actions push the built html to this repository.\nIt's a bit of an upheaval unfortunately."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 18:48:33+00:00",
                    "text": "It's a bit of an upheaval unfortunately.\n\nBy this I just mean that all contributors will have to checkout a different repository.\nRegarding the github action workflows I've put together here: there is very little that needs changing, I only need to change the repository that it pushes to."
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 21:08:38+00:00",
                    "text": "That was a mistake of using a repo and serving it directly. A better approach is to have a repository with the sources, and the CI then builds the page from master and pushes it somewhere else to be served.\nSecond, the name of this repository fortran-lang.github.io is misleading anyway because it is actually serves at fortran-lang.org. So how about we rename this repository to fortran-lang.org, to keep all the history, stars, issues, etc.\nThen we create a new repository that would actually serve fortran-lang.org. So that it is not confusing, perhaps it can be called fortran-lang.org.deploy or something like that.\nAnd then setup a CI at fortran-lang.org that checks each PR (it builds it and pushes somewhere to be looked at, not at fortran-lang.org), and then every master will get built and pushed into fortran-lang.org.deploy to be served at fortran-lang.org."
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 21:12:44+00:00",
                    "text": "Now when I think about it, let's just keep https://github.com/fortran-lang/fortran-lang.github.io as is, if GitHub allows it, but it will become the source repository. The fortran-lang.org domain will be served from the new repository, say fortran-lang.org.deploy. The same setup from my previous comment, but we don't need to rename this repository, so people don't need to update their setup."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 21:24:12+00:00",
                    "text": "That was a mistake of using a repo and serving it directly. A better approach is to have a repository with the sources, and the CI then builds the page from master and pushes it somewhere else to be served.\n\nI disagree here, this approach, of using the 'gh-pages' branch is quite standard for so-called project sites, see here. Unfortunately I didn't realise github doesn't allow this approach for so-called organisation sites. (I can see no actual reason why it is disallowed here)\n\nSecond, the name of this repository fortran-lang.github.io is misleading anyway because it is actually serves at fortran-lang.org. So how about we rename this repository to fortran-lang.org, to keep all the history, stars, issues, etc.\nThen we create a new repository that would actually serve fortran-lang.org. So that it is not confusing, perhaps it can be called fortran-lang.org.deploy or something like that.\nAnd then setup a CI at fortran-lang.org that checks each PR (it builds it and pushes somewhere to be looked at, not at fortran-lang.org), and then every master will get built and pushed into fortran-lang.org.deploy to be served at fortran-lang.org.\n\nWe have to keep the rendered html at fortran-lang.github.io since this is a so-called organisation site which serves the site at https://<organization>.github.io. If we use any other repository it will not be an organisation site but simply a project site which is not served at the site root but under https://<organization>.github.io/<repository>.\nSee here for full explanation:\nhttps://help.github.com/en/github/working-with-github-pages/about-github-pages#types-of-github-pages-sites\nMy proposition is similarly based on a two repository approach, but the unbuilt source (current repo contents) is moved to a new repository and fortran-lang.github.io is used for deployment via CI for the reasons mentioned above.\nUnfortunately as I said, and as you point out, it is an upheaval meaning stars, issues etc are effectively lost."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 21:27:04+00:00",
                    "text": "That was a mistake of using a repo and serving it directly.\n\nNo, I did it on purpose as an org page so that repository pages like stdlib automatically inherit the top-level domain.\nI'm okay with either approach. For the site in production repository name, just fortran-lang.org is my preference."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 21:28:00+00:00",
                    "text": "To lay out my proposed solution more formally:\n\n\nRename existing fortran-lang.github.io repo to fortran-lang-source\n(We get to keep stars, issues, history, etc)\n\n\nCreate new fortran-lang.github.io repo\n\n\nUpdate pull request CI to deploy to master on new fortran-lang.github.io"
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 21:30:36+00:00",
                    "text": "@LKedward that's fine, this will work.\nNote that I routinely deploy from a deploy repository, e.g. https://www.theoretical-physics.com/, is served by https://github.com/certik/tfc-deploy and pushed into it from the https://gitlab.com/certik/theoretical-physics/ source repository. But perhaps it's different if we are part of an organization? I don't know."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-03 21:36:38+00:00",
                    "text": "The only reason the original workflow didn't work here is because github allows the workflow for project sites but not for organisation/user sites. (I had the workflow working in my fork, but because it was a fork it was a project site not an organisation site.)"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 21:53:36+00:00",
                    "text": "We don't have to use an organization page. I chose that because of 2 benefits:\n\nYou don't need to maintain a production repo (the one being served), it's done automatically and under the hood by GitHub;\nProject pages inherit top-level domain.\n\nI don't think there are any other advantages. The obvious downside is that you can't do what we're now trying to do here, and we want to do it.\nIf the repo is called <orgname>.github.io and you chose to serve a page from it, then it's an org page (and ditto for <username>).\nHowever, this doesn't mean that fortran-lang.github.io (this repo) must be an org page. If you disable serving in the settings, it's not a page anymore.\nThere's a number of solutions here that preserve repo metadata (stars, issues, etc.).\nMy favorite actually is to:\n\nRename this repo so it's not an org page (preserves metadata);\nDeploy to gh-pages branch.\n\nBut deploying to master of another repo is okay too. It just seems like unnecessary added complexity of carrying a separate repo for deployment."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 21:56:39+00:00",
                    "text": "We have to keep the rendered html at fortran-lang.github.io since this is a so-called organisation site which serves the site at https://.github.io. If we use any other repository it will not be an organisation site but simply a project site which is not served at the site root but under https://<organization>.github.io/<repository>.\n\n@LKedward I don't think this matters at all because GitHub will redirect https://<organization>.github.io/<repository> to fortran-lang.org anyway. Am I wrong?"
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 22:30:45+00:00",
                    "text": "It's a clean approach to just have a repository with the sources. But I am fine either way.\n\nWhat do you mean by inherit top level domain? I think one can always serve to subdomains such as docs.fortran-lang.org with different repositories.\n\u2026\nOn Sun, May 3, 2020, at 3:53 PM, Milan Curcic wrote:\n\n\n We don't have to use an organization page. I chose that because of 2 benefits:\n\n  1. You don't need to maintain a production repo (the one being\n served), it's done automatically and under the hood by GitHub;\n  2. Project pages inherit top-level domain.\n I don't think there are any other advantages. The obvious downside is\n that you can't do what we're now trying to do here, and we want to do\n it.\n\n If the repo is called .github.io *and* you chose to serve a page from\n it, then it's an org page (and ditto for ).\n\n However, this doesn't mean that fortran-lang.github.io (this repo) must\n be an org page. If you disable serving in the settings, it's not a page\n anymore.\n\n There's a number of solutions here that preserve repo metadata (stars,\n issues, etc.).\n\n My favorite actually is to:\n\n  1. Rename this repo so it's not an org page (preserves metadata);\n  2. Deploy to gh-pages branch.\n But deploying to master of another repo is okay too. It just seems like\n unnecessary added complexity of carrying a separate repo for deployment.\n\n \u2014\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub\n <#46 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWHGDBV5AFWVF5CU4WTRPXRWZANCNFSM4MXXO3AQ>."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-03 22:37:53+00:00",
                    "text": "What do you mean by inherit top level domain?  I think one can always serve to subdomains such as docs.fortran-lang.org with different repositories.\n\nExample: https://fortran-lang.org/stdlib/. That page is served from the fortran-lang/stdlib repo. It's just a convenience feature, nothing major.\nYes, we can easily serve other project pages as subdomains, it's just a matter of adding a CNAME record.\nI defer the choice of final implementation for this to you and Laurence. What matters to me is that we have automatic previews and preserve metadata, for both of which it looks like we have solutions."
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 22:41:35+00:00",
                    "text": "I see. I think we should not use this master domain feature. Rather, I would serve the whole webpage as a single generated page from a single repo. I feel that's cleaner. We can still pull out docs from other repos.\n\u2026\nOn Sun, May 3, 2020, at 4:38 PM, Milan Curcic wrote:\n\n\n > What do you mean by inherit top level domain? I think one can always serve to subdomains such as docs.fortran-lang.org with different repositories.\n\n Example: https://fortran-lang.org/stdlib/. That page is served from the\n fortran-lang/stdlib repo. It's just a convenience feature, nothing\n major.\n\n Yes, we can easily serve other project pages as subdomains, it's just a\n matter of adding a CNAME record.\n\n I defer the choice of final implementation for this to you and\n Laurence. What matters to me is that we have automatic previews and\n preserve metadata, for both of which it looks like we have solutions.\n\n \u2014\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub\n <#46 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWBHYTPCQZ7VVOBLII3RPXW4ZANCNFSM4MXXO3AQ>."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-04 07:58:28+00:00",
                    "text": "@LKedward I don't think this matters at all because GitHub will redirect https://<organization>.github.io/<repository> to fortran-lang.org anyway. Am I wrong?\n\nAh okay, yep you are right here.\n\nMy favorite actually is to:\n\nRename this repo so it's not an org page (preserves metadata);\nDeploy to gh-pages branch.\n\n\nI agree this is by far the simplest and least-disruptive solution.\nWe get to keep metadata and this pull request can be merged as is.\nDoes anyone know how this will affect existing forks?\nUpdate: I've never renamed a repository before but it seems github is very accommodating to renaming repositories: the original repository url will redirect all web traffic and git operations to the new one (assuming we don't create another fortran-lang.github.io repo) so there aren't really any disadvantages to this approach!"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 12:10:12+00:00",
                    "text": "I've reopened this PR in #54 for when the repo has been renamed.\nI think fortran-lang.org makes sense as a repo name, what do you think?"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 12:41:15+00:00",
                    "text": "I agree. @certik what do you think?"
                },
                {
                    "user": "certik",
                    "date": "2020-05-07 12:49:38+00:00",
                    "text": "Yes.\n\u2026\nOn Thu, May 7, 2020, at 6:41 AM, Milan Curcic wrote:\n\n\n I agree. @certik <https://github.com/certik> what do you think?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#46 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWDVAQYBOWH3NYIFG2DRQKT7TANCNFSM4MXXO3AQ>."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 14:35:07+00:00",
                    "text": "Okay, I'm gonna rename the repo now."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 14:40:32+00:00",
                    "text": "The rename seems like it worked. The website had about 1 minute of downtime while I was applying the custom domain in the settings. It is now served from gh-pages. I think we can now move forward and merge #54"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 14:41:27+00:00",
                    "text": "Sounds good!"
                }
            ]
        },
        {
            "number": 45,
            "user": "certik",
            "date": "2020-04-30 22:36:50+00:00",
            "title": "Add the rest of the Fortran compilers",
            "text": "Every compiler from the following pages should now be listed (either\nactive or discontinued):\nhttps://en.wikipedia.org/wiki/List_of_compilers#Fortran_compilers\nhttp://fortranwiki.org/fortran/show/Compilers\nhttps://fortran.bcs.org/2017/fortran_2003_2008_compiler_support.pdf",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-30 22:48:04+00:00",
                    "text": "Available now at https://fortran-lang.org/compilers/\nWe are now in a pretty good shape. Turns out there are still 12 commercial compilers that seem maintained (some more than others). That's impressive."
                }
            ]
        },
        {
            "number": 44,
            "user": "certik",
            "date": "2020-04-30 16:01:13+00:00",
            "title": "Make the favicon F white inside",
            "text": "Currently this is how the https://fortran-lang.org/ page looks in a Tab that is not active:\n\nThe F is really hard to read. We should make the F inside the purple box white. That way it should be nicely visible.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-30 16:02:05+00:00",
                    "text": "It's this file that has to be fixed: https://github.com/fortran-lang/fortran-lang.github.io/blob/837383d01152ff8fdf5412228fca6bee8c09781f/favicon.ico"
                },
                {
                    "user": "jacobwilliams",
                    "date": "2020-04-30 16:13:28+00:00",
                    "text": "Can do! Actually I thought I did make it white... Maybe it is transparent."
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 16:22:43+00:00",
                    "text": "Thanks @jacobwilliams. I thought you did too, but for some reason it still is transparent on the website. Not sure where the problem is."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-30 16:28:37+00:00",
                    "text": "@certik could your browser be caching the old icon?\nIt doesn't appear transparent here: https://fortran-lang.org/favicon.ico"
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 16:31:06+00:00",
                    "text": "@LKedward I don't know. Can you send a screenshot how it looks like in an inactive Tab for you?\nI would like the corners to be transparent, but the F inside to be white. Here is how  https://fortran-lang.org/favicon.ico looks in my Firefox on Ubuntu:\n\nIt has white inside, but also around the corners. The corners should be transparent."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-30 16:35:16+00:00",
                    "text": ""
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 16:35:26+00:00",
                    "text": "Ok, maybe it is cached. Here is how the fortran-lang.org tab looks like now:\nInactive:\n\nActive:\n\nIn both cases, the corners are transparent and the F is white, as I would like it.\nSo maybe it's already fixed and it was just my browser that cached the old icon? I don't know what I did differently. I tested both Firefox and Chrome in Ubuntu 18.04 and it seems to work now.\nCan others confirm that what they see is exactly what I posted in this comment?"
                },
                {
                    "user": "certik",
                    "date": "2020-05-03 14:12:06+00:00",
                    "text": "I am going to close this. I think it is fixed."
                },
                {
                    "user": "ivan-pi",
                    "date": "2020-05-03 17:57:01+00:00",
                    "text": "Just noticed this issue now. After clicking \"Clear recent history\" in my browser and marking the cache checkbox, the favicon is displayed correctly. \ud83d\udc4d"
                }
            ]
        },
        {
            "number": 43,
            "user": "LKedward",
            "date": "2020-04-30 10:12:32+00:00",
            "title": "Update: packages footer with instructions link.",
            "text": "After #26 is merged, this will update the link at the bottom of\nthe packages pages to point to PACKAGES.md which details the criteria and\nprocess for getting a project listed in the index.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-30 15:52:28+00:00",
                    "text": "Looks great, thanks!"
                }
            ]
        },
        {
            "number": 42,
            "user": "certik",
            "date": "2020-04-25 16:25:13+00:00",
            "title": "Make all urls clickable links",
            "text": "",
            "comments": []
        },
        {
            "number": 41,
            "user": "certik",
            "date": "2020-04-25 16:08:21+00:00",
            "title": "Create a Preview for each PR",
            "text": "Right now we have to test a PR locally that it works. Our CI should create a preview of each PR, so that we can simply see it right away. Typically that is achieved by pushing the PR into some review github pages as a branch with a url prefix so each PR has its own prefix and we can check that the page looks good.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-05-03 21:17:04+00:00",
                    "text": "We had to revert the fix, so I am reopening the issue also."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 15:02:31+00:00",
                    "text": "I think this needs re-opening unfortunately,\nTest PR #55 failed to push the preview build to the repo.\nThere's a permissions problem."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 15:10:31+00:00",
                    "text": "I don't see any failure in that link. What kind of permission is needed?"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 15:17:42+00:00",
                    "text": "I don't see any failure in that link.\n\nYeah it's a bit annoying, the marketplace action for pushing to the repo completes successfully even if the push failed.\nLook under  > Commit and push to gh-pages /  > Internal logs.\nIt seems the github action for pull requests from forks only has read-only access.\nI think a solution can be to have the preview build triggered explicitly when someone with write access comments #build_pr or something. I will look into this."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-07 15:24:01+00:00",
                    "text": "If we add you as collaborator with permissions on this repo, would you know how to set it up?"
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-07 15:27:37+00:00",
                    "text": "If we add you as collaborator with permissions on this repo, would you know how to set it up?\n\nYes I believe so"
                }
            ]
        },
        {
            "number": 40,
            "user": "LKedward",
            "date": "2020-04-25 09:24:37+00:00",
            "title": "Fix: navbar highlighting and sign-posting",
            "text": "Fixes #39\nCompilers and Learn section are now highlighting correctly.\nThe newsletters have been switched to using the 'post' layout so that 'News' is highlighted in the navbar.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-25 16:06:21+00:00",
                    "text": "I checked locally, it looks good. Thanks!"
                }
            ]
        },
        {
            "number": 39,
            "user": "LKedward",
            "date": "2020-04-25 09:21:33+00:00",
            "title": "Navbar highlighting not working consistently",
            "text": "Highlighting the current site section in the Navbar is currently only working for the packages pages.",
            "comments": []
        },
        {
            "number": 38,
            "user": "LKedward",
            "date": "2020-04-25 09:11:31+00:00",
            "title": "News sidebar displays recent news.",
            "text": "Copied the news format from the top-level index.html\nto _includes/news_sidebar.html so that it shows recent\nnews titles.",
            "comments": []
        },
        {
            "number": 37,
            "user": "LKedward",
            "date": "2020-04-25 09:01:32+00:00",
            "title": "Add: gemfile.lock to repository.",
            "text": "Fixes #17.",
            "comments": []
        },
        {
            "number": 36,
            "user": "LKedward",
            "date": "2020-04-25 08:58:32+00:00",
            "title": "Update: news page to show more posts",
            "text": "Fixes #35.\nNews page shows last five posts; first post is shown in full.\nArchive page formatting updated to group posts.\nNav bar highlighting fixed for news pages.",
            "comments": []
        },
        {
            "number": 35,
            "user": "certik",
            "date": "2020-04-24 21:27:37+00:00",
            "title": "The NEWS page only shows the latest news item",
            "text": "This should list all the news, not just the latest:\nhttps://fortran-lang.org/news/",
            "comments": []
        },
        {
            "number": 34,
            "user": "certik",
            "date": "2020-04-24 21:23:56+00:00",
            "title": "Show authors",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-24 21:58:16+00:00",
                    "text": "I need this to show online already (I am sending a link to it to my management). I am going to merge it. @milancurcic and others --- if you are against this change, I am happy to revert it. Let me know."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 21:59:41+00:00",
                    "text": "It's perfect, I'm glad you moved it forward."
                }
            ]
        },
        {
            "number": 33,
            "user": "certik",
            "date": "2020-04-24 21:12:40+00:00",
            "title": "Use better formatting of headers",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-24 21:13:10+00:00",
                    "text": "This makes it look much better. I am just going to merge it."
                }
            ]
        },
        {
            "number": 32,
            "user": "certik",
            "date": "2020-04-24 21:00:25+00:00",
            "title": "Installation instructions fail",
            "text": "Even after the fix in #31 they fail:\n$ bundle install --path .bundle\n[DEPRECATED] The `--path` flag is deprecated because it relies on being remembered across bundler invocations, which bundler will no longer do in future versions. Instead please use `bundle config set path '.bundle'`, and stop using this flag\nFetching gem metadata from https://rubygems.org/...........\nFetching gem metadata from https://rubygems.org/.\nResolving dependencies...\nFetching public_suffix 4.0.4\nInstalling public_suffix 4.0.4\nFetching addressable 2.7.0\nInstalling addressable 2.7.0\nUsing bundler 2.1.4\nFetching colorator 1.1.0\nInstalling colorator 1.1.0\nFetching concurrent-ruby 1.1.6\nInstalling concurrent-ruby 1.1.6\nFetching eventmachine 1.2.7\nInstalling eventmachine 1.2.7 with native extensions\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\n\ncurrent directory:\n/home/ondrej/repos/fortran-lang.github.io/.bundle/ruby/2.5.0/gems/eventmachine-1.2.7/ext\n/usr/bin/ruby2.5 -r ./siteconf20200424-23119-fxep5g.rb extconf.rb\nmkmf.rb can't find header files for ruby at /usr/lib/ruby/include/ruby.h\n\nextconf failed, exit code 1\n\nGem files will remain installed in\n/home/ondrej/repos/fortran-lang.github.io/.bundle/ruby/2.5.0/gems/eventmachine-1.2.7\nfor inspection.\nResults logged to\n/home/ondrej/repos/fortran-lang.github.io/.bundle/ruby/2.5.0/extensions/x86_64-linux/2.5.0/eventmachine-1.2.7/gem_make.out\n\nAn error occurred while installing eventmachine (1.2.7), and Bundler\ncannot continue.\nMake sure that `gem install eventmachine -v '1.2.7' --source\n'https://rubygems.org/'` succeeds before bundling.\n\nIn Gemfile:\n  jekyll was resolved to 3.8.6, which depends on\n    em-websocket was resolved to 0.5.1, which depends on\n      eventmachine\n\nI am using Ubuntu 18.04.",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-04-24 21:02:21+00:00",
                    "text": "I think you need to install ruby-dev package.\nThis should be added to the README."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 21:03:27+00:00",
                    "text": "I figured it out: fc3a958"
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 21:03:52+00:00",
                    "text": "@LKedward you are right. I figured it out right as you posted it."
                }
            ]
        },
        {
            "number": 31,
            "user": "certik",
            "date": "2020-04-24 20:59:53+00:00",
            "title": "Fix installation instructions",
            "text": "Fixes #32.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-24 21:28:24+00:00",
                    "text": "I am just going to merge this simple fix to get things done. If there are any objections, I can wait longer next time."
                }
            ]
        },
        {
            "number": 30,
            "user": "certik",
            "date": "2020-04-24 20:53:14+00:00",
            "title": "Meeting fixes",
            "text": "This was meant to be part of #29.",
            "comments": []
        },
        {
            "number": 29,
            "user": "certik",
            "date": "2020-04-24 20:41:26+00:00",
            "title": "NEWS: Summarize the February J3 meeting",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-24 20:55:43+00:00",
                    "text": "So this looks really ugly:\nhttps://fortran-lang.org/newsletter/2020/02/28/J3-february-meeting/\nPlease do not advertise this."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 21:33:22+00:00",
                    "text": "I fixed it up in #30 and #33. Looks much better now. But it still needs #34. Then I am happy."
                }
            ]
        },
        {
            "number": 28,
            "user": "milancurcic",
            "date": "2020-04-24 20:29:57+00:00",
            "title": "Should we list g95 in open source compilers?",
            "text": "http://g95.org/\nI'm torn. :)\nOn one side, I used this compiler briefly over 10 years ago and it's dear to me. \"It's free crunch time\" is an awesome tagline. Despite what its name implies, this compiler supports coarrays out of the box, at least to some capacity. Its status page has a long list of packages that work with g95.\nOn the other side, it looks like the project is not developed any more. The most recent update on the site that I can find is from 2013.",
            "comments": [
                {
                    "user": "jacobwilliams",
                    "date": "2020-04-24 20:46:17+00:00",
                    "text": "I would say no. It\u2019s defunct. I know people still use it but people still use g77 too. Best not to encourage that."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 20:50:21+00:00",
                    "text": "Indeed. From looking at the source, it seems that g95 was meant to be included as the Fortran frontend of GCC. I guess it continued as its own project once gfortran was released."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 20:50:41+00:00",
                    "text": "I vote no. I would only list actively maintained compilers. Otherwise we have to list every old F77 and other commercial compilers. Every old compiler can be used in principle. But the purpose of the page is to list compilers that are maintained today.\nIf, however, somebody forks g95 and starts maintaining it again, then we can list it."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-27 19:48:06+00:00",
                    "text": "The opinion is unanimous on this one, so I will close it."
                }
            ]
        },
        {
            "number": 27,
            "user": "certik",
            "date": "2020-04-24 19:30:09+00:00",
            "title": "Add more commercial Fortran compilers",
            "text": "And describe each of them using their own words as copied from their\nwebsites.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-24 20:06:57+00:00",
                    "text": "I merged it. Now the compiler page looks decent, and we can keep improving it with further PRs."
                }
            ]
        },
        {
            "number": 26,
            "user": "LKedward",
            "date": "2020-04-24 19:15:16+00:00",
            "title": "Start document for detailing package index guidelines.",
            "text": "@milancurcic and @certik I think this covers everything we discussed in #20 ?",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-30 15:51:10+00:00",
                    "text": "Let's merge this. People approved it and we can refine as we go later if needed."
                }
            ]
        },
        {
            "number": 25,
            "user": "certik",
            "date": "2020-04-24 19:02:51+00:00",
            "title": "Reorder open source compilers",
            "text": "I think the order now roughly reflects the maturity, community size and\nmind-share in that order.\nAs the author of LFortran, I approve this change.",
            "comments": []
        },
        {
            "number": 24,
            "user": "gklimowicz",
            "date": "2020-04-24 18:32:28+00:00",
            "title": "Suggest some tweaks for Ond\u0159ej.",
            "text": "@certik I've written some proposed changes for F18 and current Flang.\nThis seemed like the easiest way to suggest the wording change.\nLet me know if you would like something else.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-24 18:57:31+00:00",
                    "text": "Thank you @gklimowicz, I appreciate it. This is perfect, and if you are ok with the wording, then so are we."
                }
            ]
        },
        {
            "number": 23,
            "user": "gklimowicz",
            "date": "2020-04-24 18:20:36+00:00",
            "title": "Suggest some tweaks for Ond\u0159ej.",
            "text": "Hi, @certik. I thought I would go through the exercise of generating a pull request with some tweaks to the language about current Flang and f18 for the compilers.md page.\nLet me know what you think and we can perhaps iterate on a change.",
            "comments": [
                {
                    "user": "gklimowicz",
                    "date": "2020-04-24 18:22:32+00:00",
                    "text": "Whoops. Link is wrong."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 18:23:36+00:00",
                    "text": "Perfect, thank you. Ping me once it is ready."
                }
            ]
        },
        {
            "number": 22,
            "user": "LKedward",
            "date": "2020-04-24 18:06:08+00:00",
            "title": "Add package: p-costa/CaNS",
            "text": "Fixes #21",
            "comments": []
        },
        {
            "number": 21,
            "user": "p-costa",
            "date": "2020-04-24 16:46:03+00:00",
            "title": "addition to the list scientific codes",
            "text": "would it be possible to add CaNS to the list of scientific codes?\nthe repo on github: https://github.com/p-costa/CaNS",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-04-24 16:50:57+00:00",
                    "text": "This code looks good, I don't think there'll be an opposition to adding it.\nAre you happy with the following entry:\nname: Canonical Navier Stokes (CaNS)\ndescription: A code for fast, massively-parallel direct numerical simulations (DNS) of canonical flows\nLicense: MIT\n\nCan you suggest some tags to use for indexing?\nDo you have a version number or plan to release a version on github?"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 16:54:11+00:00",
                    "text": "@p-costa very nice project!\n@LKedward @certik we should design a PR template with a checklist for these submissions."
                },
                {
                    "user": "p-costa",
                    "date": "2020-04-24 16:59:18+00:00",
                    "text": "Thanks @LKedward :). The description is perfect. I would just change the name to just name: CaNS.\nIn terms of tags, I can suggest those of the GitHub repo:\nfluid-dynamics\nfluid-simulation\ncomputational-fluid-dynamics\nturbulence\nhigh-performance-computing\ncfd\nI do not have a release version on GitHub, and I was not planning to have it for the being; hope that is fine!"
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 17:10:42+00:00",
                    "text": "@p-costa thanks! We missed this project I think in our initial list.\nWe are still figuring out the detailed criteria in #20, but I think you are satisfying them, so you have my +1."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-24 17:11:48+00:00",
                    "text": "Cheers @p-costa, that's great! Will put together the PR."
                }
            ]
        },
        {
            "number": 20,
            "user": "certik",
            "date": "2020-04-24 16:28:48+00:00",
            "title": "Write down criteria how to include a package",
            "text": "We should also setup criteria how to include a package there --- right now the criterion I think was at least 29 stars at GitHub and Fortran as the majority language (as determined by GitHub). I would be for lowering the number of stars, for example if we lower to 15, then one of my other 100% Fortran project would qualify: https://github.com/certik/hfsolver :), what is nice about this one is that it has all kinds of very good computational routines that could be useful for others. But if we lower the number of stars, then I want to do it in a systematic way, I want to see every single GitHub project included. I think we achieved it with the > 29 stars.",
            "comments": [
                {
                    "user": "LKedward",
                    "date": "2020-04-24 16:43:27+00:00",
                    "text": "Yes I think we need criteria - however having now been through a large list of projects I don't find number of stars to be a very good indicator of project quality or utility.\nI find they are much more like social media 'likes' and, as I think you've mentioned @certik, they are skewed towards projects which have been online for longer.\nI think more objective criteria should be used to include projects which importantly will allow new projects to gain good exposure and momentum. Such objective criteria could include:\n\nProject does not appear to be archived/abandoned\nProject includes open source license\nProject has a README clearly stating project purpose, dependencies and build process\nProject source can be browsed and cloned without registration\nProject permits issues/tickets to be raised\nProject has some form of documentation (however basic)\n\nA possible idea is to have a stricter set of criteria which earn the project a green 'Verified' flag in the package index and a higher ranking:\n\nProject contains complete documentation\nProject contains tests\nProject follows some standard best practices for portability"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 16:45:22+00:00",
                    "text": "I don't think we should use GitHub stars as a criterion. It was okay for the first step but we need something better now. I think we all agree that the number of GitHub stars is not a measure of relevence of a package.\nI also don't think we should include every GitHub Fortran project. Many repos could fall in that are either unusable or semi-usable, or they're a slight modification of another project.\nAs you say, we need to decide what makes a package relevant enough. I think some requirements should be:\n\nPure Fortran or mixed-language project where Fortran is the majority of the code (or > than some % of the code). This is somewhat arbitrary;\nEither installable by fpm (in the future) or includes install instructions in the repo;\nUnique: We shouldn't include packages that are a slight modification of an existing package. Including them could create confusion for the end user.\n\nMy guess is that based on these criteria, most packages that one would care submitting would be acceptable."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 16:48:15+00:00",
                    "text": "I agree with most ideas by @LKedward, except these:\n\nProject does not appear to be archived/abandoned\n\nI think we would be amiss to not include some mature legacy projects that aren't actively maintained. I can't think of any from the top of my head, but I'd bet there are.\n\nProject permits issues/tickets to be raised\n\nThis one may be too restrictive as it assumes a development platform. It would disqualify archived packages which I think may be important to list.\nBut of course, I'm yet to provide examples of worthwhile archived projects."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 17:06:08+00:00",
                    "text": "The proposed criteria from @LKedward and @milancurcic seem ok with me.\nI would like some criterion to exclude projects that literally just started and have no users and are not yet clear that they would be a good community project. As an example of such a project would be https://github.com/certik/allocate. I know that this project doesn't satisfy the other criteria either (e.g., doesn't have a README).\nHow about an additional criterion such as having at least 5 GitHub stars? A really low bar, but it would exclude some personal test projects such as the one I linked above."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 17:08:26+00:00",
                    "text": "An in addition, after we write down the criteria, I would say that it has to get at least 3 positive reviews from the fortran-lang community. That way we will simply judge each project on a case by case basis, and requiring 3 reviews should guarantee that we are fair."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-24 17:16:34+00:00",
                    "text": "I agree with all these points"
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 17:19:11+00:00",
                    "text": "@LKedward if you have time, do you want to submit a PR with the document that has these rules?"
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-24 17:23:44+00:00",
                    "text": "@certik yep I can do that."
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 15:51:29+00:00",
                    "text": "This was fixed in #26."
                }
            ]
        },
        {
            "number": 19,
            "user": "LKedward",
            "date": "2020-04-24 15:49:45+00:00",
            "title": "Fortran Packages",
            "text": "@milancurcic  These are the final edits for #18  that I didn't push. Sorry!",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 16:10:02+00:00",
                    "text": "Excellent, I love the styling, thank you.\nThe categories of packages look great. You're right about using sub-pages over one long page--I didn't realize how many packages there would be. And these aren't even all of them."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 16:11:10+00:00",
                    "text": "@certik take a look at the preview."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 16:26:02+00:00",
                    "text": "This is really awesome. The GitHub info (stars, license, issues, ...) take a long time to load for me (but that's good enough for now).\n+1 to merge as is.\nWe should also setup criteria how to include a package there --- right now the criterion I think was at least 29 stars at GitHub and Fortran as the majority language (as determined by GitHub). I would be for lowering the number of stars, for example if we lower to 15, then one of my other 100% Fortran project would qualify: https://github.com/certik/hfsolver  :), what is nice about this one is that it has all kinds of very good computational routines that could be useful for others. But if we lower the number of stars, then I want to do it in a systematic way, I want to see every single GitHub project included. I think we achieved it with the > 29 stars. I made this #20."
                }
            ]
        },
        {
            "number": 18,
            "user": "LKedward",
            "date": "2020-04-23 15:37:47+00:00",
            "title": "Add explore page for listing community projects.",
            "text": "Inspired by your comment @certik, I've put together a very simple and (hopefully) user-friendly community project index page.\nThe 'Development' top-level page has been replaced with an 'Explore' page which lists foremost the stdlib and fpm projects followed by a searchable index of community code packages also broken down by category.\nPackages are listed centrally by metadata in a yaml file, everything else is generated.\nI've populated a few popular packages to start off with.\nEventually this could involve some integration with FPM.\nSearch functionality is fairly rudimentary based on substrings.\nI've included automated badges for github stars etc. as done here, though do note they take some time to load due to the API - there might be a way to cache them, but I can't think how exactly.\nFeedback welcome.\nPreview this pull request statically here",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-23 16:37:50+00:00",
                    "text": "This is great, thank you so much @LKedward !\nWe need to ensure all the codes from https://github.com/fortran-lang/stdlib/wiki/List-of-popular-open-source-Fortran-projects are there.\nIt's great that it's in the yaml format, that way we can write scripts to sort them by the number of stars."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-23 16:47:17+00:00",
                    "text": "I love this, thank you Laurence for taking the initiative.\nI have a few high-level suggestions for now:\n\nPage and tab name: \"Explore\" seems a little vague to me. I expected that it meant \"Explore Fortran language\" which would be more like a tutorial. Should we use a more specific word here, perhaps \"Packages\"?\nFortran-lang organisation projects: I'd like to de-empasize \"organization\" and emphasize community. I suggest rewording this header as \"Fortran-lang community projects\", and adding this website and repo as the 3rd project. I'd like us to encourage people to discover this website as an editable and contributable project in motion, rather than a static place on the internet.\nFeatured community projects: Considering point above, then we should reword this to avoid confusion with this specific community (fortran-lang.org) and because not all projects listed are community projects. Perhaps a broader header, Featured open source projects is more appropriate.\n\nCategory sub-pages: I recommend not navigating to a level 3 sub-page for each category, but to have one longer page (level 2) that lists all categories and projects, with a hyperlinked category TOC at the top. Then the visitor could easily browse all categories and packages without navigating away. I personally start to get lost when websites have level 3 sub-page.\nSpecific categories: I don't think these categories work well. Specifically, they're all broad and have overlap between each other. I suggest having more specific and narrowly defined categories, like Linear Algebra, Simulation, Graphics, General purpose, and perhaps others.\n\n\n\nThe rewording suggestions are probably easy to implement here. If you agree, you can include them as part of this PR.\nFor others I suggest we open specific follow-up PRs to improve each part of the page."
                },
                {
                    "user": "certik",
                    "date": "2020-04-23 16:53:03+00:00",
                    "text": "This will really help the Fortran community. Later on some of these become part of fpm registry, etc. But for now this is what is needed."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-24 10:09:43+00:00",
                    "text": "Thanks for the comments!\n@milancurcic I agree with you re rewording - I'll update with your suggestions.\n\n\nCategory sub-pages: I recommend not navigating to a level 3 sub-page for each category, but to have one longer page (level 2) that lists all categories and projects, with a hyperlinked category TOC at the top. Then the visitor could easily browse all categories and packages without navigating away. I personally start to get lost when websites have level 3 sub-page.\n\n\nUnfortunately I disagree here. I personally find long scrolling pages difficult to navigate efficiently and therefore poor design. I think your point can be easily remedied using appropriate signposting (e.g. breadcrumbs; I will attempt to demonstrate this better here. We can discuss this in a separate issue for the site as a whole?\n\n\nSpecific categories: I don't think these categories work well. Specifically, they're all broad and have overlap between each other. I suggest having more specific and narrowly defined categories, like Linear Algebra, Simulation, Graphics, General purpose, and perhaps others.\n\n\nYep this is true - as I've added more packages, it's become clearer which categories to use and they are now more distinct. The category system is very extensible, so future PRs can refine easily.\n\nThis is great, thank you so much @LKedward !\nWe need to ensure all the codes from https://github.com/fortran-lang/stdlib/wiki/List-of-popular-open-source-Fortran-projects are there.\n\nThanks @certik, I've been through that whole list now; for this initial PR I've prioritised adding libraries and modules that would be of use to Fortran programmers over large domain-specific scientific applications. Having been through the list (and as you note also) I find that the number of stars is actually a poor indicator of package utility IMHO. I find they are much more like social media 'likes' - we see this in the skew towards large scientific applications, which are domain-specific and hence of limited utility to the wider Fortran community. We can discuss criteria for indexing packages in another issue?"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 15:45:38+00:00",
                    "text": "This is good to go, I will merge. Great addition to the site!\nWe can discuss and refine any specifics in separate issues and PRs."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-24 15:48:06+00:00",
                    "text": "Hi @milancurcic , I didn't realise this had come out of draft status - I haven't pushed the final commits from my local repo!"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-24 16:22:32+00:00",
                    "text": "Sorry, my bad, I misunderstood!"
                }
            ]
        },
        {
            "number": 17,
            "user": "LKedward",
            "date": "2020-04-22 14:50:16+00:00",
            "title": "Add Gemfile.lock to repo",
            "text": "A minor point, and I will defer to those with more experience with Ruby, however my understanding is that for non-library projects (no dependents) the lock file should be committed to the repository so that all contributors are building within the same environment. Repo lock files are only then updated when updated dependencies have been tested.",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-04-22 14:59:56+00:00",
                    "text": "My experience with Ruby is near zero, just enough to get by. What you say makes sense, Rust does similarly.\nThis is most likely inconsequential because the site is built by GitHub, but I agree with committing Gemfile.lock to the repo."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-22 17:29:05+00:00",
                    "text": "This is most likely inconsequential because the site is built by GitHub...\n\nThis is actually an issue I think because the build is not strictly reproducible between the local copy and the GitHub build; so theoretically a local build could succeed but fail to build with GitHub when pushed.\nI see now that this is recommended for bundler so I'll do a PR."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-22 17:38:26+00:00",
                    "text": "You're right, my bad. I see why it's important to have a Gemfile.lock now."
                }
            ]
        },
        {
            "number": 16,
            "user": "LKedward",
            "date": "2020-04-22 14:45:44+00:00",
            "title": "Update: compilers page with Flang information.",
            "text": "Fixes #6",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-04-22 15:01:36+00:00",
                    "text": "This looks good to me. @certik would you add anything to the description?"
                },
                {
                    "user": "ivan-pi",
                    "date": "2020-04-22 19:12:08+00:00",
                    "text": "I should point out, that it seems like only the F18 parser is complete. So to get an executable you would still have to use the \"old\" flang."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-22 19:33:05+00:00",
                    "text": "Good point. I'll update to re-include link to \"old\" flang."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 16:53:26+00:00",
                    "text": "@gklimowicz, is this a good wording for the Flang compilers?\nWe are trying list all Fortran compilers at https://fortran-lang.org/compilers/.\nRegarding the order, for open source compilers we should order based on the number of GitHub stars, so that should be this order:\nFlang https://github.com/llvm/llvm-project (4400)\nGFortran https://github.com/gcc-mirror/gcc (3700)\nLFortran https://github.com/lfortran/lfortran (131)\nYes, it's unfair to LFortran, as both Flang and GFortran are benefiting from being part of a large compiler collection, but I am ok with that for now.\nRegarding the commercial compilers, we should list them in the order of their relative usage, which we don't know, but we can do our best to estimate. (We plan to add all the commercial compilers eventually.)"
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 19:00:28+00:00",
                    "text": "This was fixed in #24."
                },
                {
                    "user": "gklimowicz",
                    "date": "2020-04-24 19:03:55+00:00",
                    "text": "@certik Just as a comment after this issue was closed, I would suggest that, like the commercial compilers, you list the open source compilers in order of presumed use. That would suggest (for now), GFortran, Current Flang (it's Arm's commercial compiler), LFortran and new Flang."
                },
                {
                    "user": "certik",
                    "date": "2020-04-24 19:07:19+00:00",
                    "text": "@gklimowicz I've already done that here: #25. I listed both Flangs in front of LFortran (we can re-evaluate in a year). I agree that GFortran should be first, as I have done in #25."
                }
            ]
        },
        {
            "number": 15,
            "user": "jacobwilliams",
            "date": "2020-04-21 20:59:38+00:00",
            "title": "added updated favicon and the png used to create it.",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-21 21:11:06+00:00",
                    "text": "I am little confused by the diff ---- there is already a favicon.ico file, and you are replacing it, and yet the diff shows your favicon.ico as a new file. I would expect it would show replacing it."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-21 21:43:10+00:00",
                    "text": "In my email I see it as modified:\nFile Changes\nA assets/img/fortran_logo_64x64.png (0)\nM favicon.ico (0)"
                },
                {
                    "user": "certik",
                    "date": "2020-04-21 21:44:01+00:00",
                    "text": "Ok. @milancurcic I'll let you merge this one."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-21 21:44:29+00:00",
                    "text": "https://raw.githubusercontent.com/jacobwilliams/fortran-lang.github.io/purple-favicon/favicon.ico\nLooks good! Thank you @jacobwilliams."
                }
            ]
        },
        {
            "number": 14,
            "user": "jacobwilliams",
            "date": "2020-04-21 02:59:43+00:00",
            "title": "added SVG file for purple logo",
            "text": "If you are interested, I added an Inkscape SVG file of the purple version of the logo. I also rerendered the png files so they look a bit less pixely now.\nI can make any other adjustments as necessary.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-21 03:26:15+00:00",
                    "text": "This is a big improvement, so I am going to merge it."
                },
                {
                    "user": "certik",
                    "date": "2020-04-21 03:27:34+00:00",
                    "text": "Can you also add a new version of https://github.com/fortran-lang/fortran-lang.github.io/blob/b1a92bee30a6b0454bc6ece006c1e1f8822a853d/favicon.ico ? That is what appears in the Tab in a browser and it would greatly help to have the white F instead of a transparent F for better visibility."
                },
                {
                    "user": "jacobwilliams",
                    "date": "2020-04-21 13:45:23+00:00",
                    "text": "Yes I can do that later today."
                },
                {
                    "user": "jacobwilliams",
                    "date": "2020-04-21 20:59:57+00:00",
                    "text": "see: #15"
                }
            ]
        },
        {
            "number": 13,
            "user": "milancurcic",
            "date": "2020-04-18 19:29:55+00:00",
            "title": "Change date format to %d %b %Y in news list",
            "text": "Currently the date in the news list on the landing page is formatted as %B %Y (example: \"February 2020\").\nFor multiple news items in a single month, it's helpful to see a day value as well.\nThis PR changes the date format to %d %b %Y so that we have something like:\n06 Apr 2020\n25 Feb 2020",
            "comments": []
        },
        {
            "number": 12,
            "user": "milancurcic",
            "date": "2020-04-18 19:12:16+00:00",
            "title": "add Fortran webinar newsletter post",
            "text": "This PR adds a newsletter post about the Open Source Directions Fortran webinar.\n@certik please review, edit as needed, and merge.",
            "comments": []
        },
        {
            "number": 11,
            "user": "Carreau",
            "date": "2020-04-18 04:41:40+00:00",
            "title": "Fix footer link to github site source.",
            "text": "",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-18 05:03:22+00:00",
                    "text": "Thank you Matthias!\n\u2026\nOn Fri, Apr 17, 2020, at 10:41 PM, Matthias Bussonnier wrote:\n\n You can view, comment on, or merge this pull request online at:\n\n #11\n\n Commit Summary\n\n  * Fix footer link to github site source.\n File Changes\n\n  * *M* _includes/footer.html\n <https://github.com/fortran-lang/fortran-lang.github.io/pull/11/files#diff-7693eb643e8fe8b8d46b407909b408ce> (2)\n Patch Links:\n\n  * https://github.com/fortran-lang/fortran-lang.github.io/pull/11.patch\n  * https://github.com/fortran-lang/fortran-lang.github.io/pull/11.diff\n \u2014\n You are receiving this because you are subscribed to this thread.\n Reply to this email directly, view it on GitHub\n <#11>, or\n unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAAFAWD3DZAGYSMALYMTFADRNEVQ7ANCNFSM4MLGM6MQ>."
                }
            ]
        },
        {
            "number": 10,
            "user": "milancurcic",
            "date": "2020-04-17 18:59:41+00:00",
            "title": "How to distribute newsletters?",
            "text": "See #3 first.\nHow should we distribute the newsletter, and specifically, should we have a mailing list?\nCurrently we have:\n\nFeed for RSS clients here: https://fortran-lang.org/news.xml\nTwitter: https://twitter.com/fortranlang, which we can further automate and have a GitHub bot post a tweet on a merged newsletter.\n\nRegarding mailing lists, I've used Google Groups (not sure if still exists) and Mailchimp (great features but a PITA to work with).\nUnless there's a really easy to set up and low maintenance mailing list solution, or we have a volunteer to do it, I'm not convinced that it's worthwhile doing this for the time being.\nWhat do you think?",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-17 19:15:03+00:00",
                    "text": "For LFortran we use groups.io, i.e. https://groups.io/g/lfortran.\nI agree Google Groups interface is really bad, especially if you do not use a gmail.\nThe GitHub issues work almost like a mailinglist.\nThe other options to use are Zulip: https://lfortran.zulipchat.com, or Gitter: https://gitter.im/sympy/sympy.\nThe advantage of a mailinglist is that you do not need to worry about closing an issue, so it's great for a general discussion or announcements. And you can use an email.\nI wondered for LFortran a lot, whether we need a mailinglist or not, initially we just setup Zulip. But later we created a mailinglist, so that I can post my updates there, and we can have a general discussion from time to time if needed.\nFor example: we should have a medium where we can announce the FortranCon, and other things and have means for people to discuss it. Twitter is one medium, but I think mailinglist is better than Twitter."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-17 19:22:43+00:00",
                    "text": "GitHub issues are great for developers with GitHub accounts and who want to follow everything about the development.\nZulip, Gitter, or Slack are good for development collaboration and building community, but they're not good for distributing newsletters and such.\nSo yes, for newsletters we need a low friction (just email signup) delivery like a mailing list.\nTwitter is better than mailing list for reaching people (non-subscribers can see it through the feed or retweets), but mailing list is better for discussion.\nHowever, would there be much discussion around news? It seems to me that the discussion would be centered more around a Chat (Zulip, Slack, etc.) or a Message Board (Discourse) format.\nGroups.io seems simple and no-nonsense on first look. If you like it, we should try using it."
                },
                {
                    "user": "certik",
                    "date": "2020-04-17 19:32:16+00:00",
                    "text": "If we decide to create a mailinglist, then groups.io is the best one I found.\nThe key question is:\n\nHowever, would there be much discussion around news? It seems to me that the discussion would be centered more around a Chat (Zulip, Slack, etc.) or a Message Board (Discourse) format.\n\nThat's what I didn't know initially either. The chat is less permanent, but the Discourse might be a good option. Discourse is probably the closest to a mailinglist.\nThe kind of discussions that people would have are visible e.g. here:\nhttps://groups.google.com/forum/#!forum/comp.lang.fortran\nYou can see that anyone can post an announcement of a new project or a new idea or a new conference, and then people can discuss and comment. I think it's very helpful in this respect.\nEssentially it would be the place to reach the Fortran community. Our CoC would apply to it, we would moderate it so that the discussions stay healthy."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-17 19:43:42+00:00",
                    "text": "We may be able to get a hosted Discourse instance for free: https://blog.discourse.org/2018/11/free-hosting-for-open-source-v2/"
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-22 15:01:08+00:00",
                    "text": "I agree, I think Twitter makes the most sense as an easy way to distribute.\nIn terms of discussion it would be good to have a central moderated and modern place for Fortran.\n(comp.lang.fortran is not moderated and I not too amenable for non-experts).\nI don't have much experience with different discussion mediums - the free Discourse instance sounds like it's worth a try?"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-02 20:05:15+00:00",
                    "text": "The mailing list is in place thanks to @certik, and is now listed on the landing page.\nI also just applied for the free Discourse instance for open source projects. We should hear back about it in few days."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-05 20:16:29+00:00",
                    "text": "The Fortran Discourse instance is up: https://fortran-lang.discourse.group/\nIt's basically a self-managed, free instance of a modern message board.\nConsidering that in the meantime we also set up the mailing list, there's some overlap between the two as in that both facilitate discussion. Let's see how each works out and whether there's prevalent preference among the community for one or the other."
                },
                {
                    "user": "LKedward",
                    "date": "2020-05-05 20:22:31+00:00",
                    "text": "Awesome, cheers for setting it up @milancurcic!\nWe have RSS and twitter for distributing newsletters and mailing list and discourse for discussions - is this issue now resolved?"
                },
                {
                    "user": "certik",
                    "date": "2020-05-05 20:57:19+00:00",
                    "text": "I think we can close it now. We have enough avenues now to have good solid engagement with the public and among ourselves and let's see how this goes and how we are using things. We might end up using both the mailinglist and the discourse."
                }
            ]
        },
        {
            "number": 9,
            "user": "LKedward",
            "date": "2020-04-17 15:47:34+00:00",
            "title": "Fix: get started link on home page.",
            "text": "Fixes #8",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-04-17 16:05:27+00:00",
                    "text": "Perfect, thanks! :)"
                }
            ]
        },
        {
            "number": 8,
            "user": "LKedward",
            "date": "2020-04-17 15:46:00+00:00",
            "title": "Broken 'Get Started' link on home page.",
            "text": "Apologies, broken by my recent tutorials PR.\nSee PR for fix.",
            "comments": []
        },
        {
            "number": 7,
            "user": "milancurcic",
            "date": "2020-04-16 15:41:12+00:00",
            "title": "Tutorial / Learn page",
            "text": "What should the learning page and tutorial look like?\nWhat should they cover?\nHow should they be organized?\nLet's discuss.\nFollow up from #5 .",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-16 16:12:47+00:00",
                    "text": "I like how Rust does it: https://www.rust-lang.org/learn\nThey have \"books\" on various subjects. So one book can be a general tutorial to Fortran, like at #5.\nAnother book can be the \"Best Practices\" from here:\nhttps://www.fortran90.org/src/best-practices.html\nwhere I collected some of the common idioms and how they should be done in the modern way.\nAnother book can be Python Fortran Rosetta Stone:\nhttps://www.fortran90.org/src/rosetta.html\nAnother can be FAQ:\nhttps://www.fortran90.org/src/faq.html\n..."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-19 09:34:06+00:00",
                    "text": "I agree, the Rust learn page is a very good example.\nI like the idea of having short online 'Books' for different topics.\nWe can easily add books as they are written and group them on the top-level Learn page by category.\nA possible structure:\n\n\nCategory: Getting started\n\nBook: Quickstart tutorial (existing tutorial)\nBook: Fortran FAQ (fortran90.org)\nBook: Fortran for Python programmers (fortran90.org)\nBook: Fortran for C/C++ programmers (see flang)\nBook: Fortran best practices (fortran90.org)\nBook: Fortran community style guide\n\n\n\nCategory: Core Language Documentation\n\nBook: Basic programming concepts (types, variables, constants, arrays, operators, expressions, character strings)\nBook: Program units (scoping units, programs, procedures, modules, submodules) and control flow (conditional and looping constructs)\nBook: Working with arrays (static, automatic, allocatable, pointer, passing/returning arrays to/from procedures)\nBook: Data input & output\n\n\n\nCategory Advanced Language Documentation\n\nBook: Object-oriented Fortran\nBook: Submodules\nBook: C interoperability\n\n\n\nThis makes it easy for people of different abilities to quickly find relevant documentation.\nGetting the structure perfect first time isn't important since we can adjust as content is added.\nThe core and advanced documentation should eventually cover the whole language in detail as a searchable and more accessible (easier-to-read) alternative to the standards documents.\nFinally there should be a section at the bottom of the learn page with links to external resources: books, standards documents, mailing lists, fortranwiki etc.\nWhat do you think?"
                },
                {
                    "user": "certik",
                    "date": "2020-04-19 13:09:10+00:00",
                    "text": "I agree.\n\u2026\nOn Sun, Apr 19, 2020, at 3:34 AM, LKedward wrote:\n\n\n I agree, the Rust learn page is a very good example.\n  I like the idea of having short online 'Books' for different topics.\n  We can easily add books as they are written and group them on the\n top-level Learn page by category.\n\n A possible structure:\n\n  * Category: Getting started\n\n    * Book: *Quickstart tutorial* (existing tutorial)\n    * Book: *Fortran FAQ* (fortran90.org)\n    * Book: *Fortran for Python programmers* (fortran90.org)\n    * Book: *Fortran for C/C++ programmers* (see flang)\n    * Book: *Fortran best practices* (fortran90.org)\n    * Book: *Fortran community style guide*\n  * Category: Core Language Documentation\n\n    * Book: *Basic programming concepts* (types, variables, constants,\n arrays, operators, expressions, character strings)\n    * Book: *Program units* (scoping units, programs, procedures,\n modules, submodules) and control flow (conditional and looping\n constructs)\n    * Book: *Working with arrays* (static, automatic, allocatable,\n pointer, passing/returning arrays to/from procedures)\n    * Book: *Data input & output*\n  * Category Advanced Language Documentation\n\n    * Book: *Object-oriented Fortran*\n    * Book: *Submodules*\n    * Book: *C interoperability*\n This makes it easy for people of different abilities to quickly find\n relevant documentation.\n  Getting the structure perfect first time isn't important since we can\n adjust as content is added.\n\n The core and advanced documentation should eventually cover the whole\n language *in detail* as a searchable and *more accessible*\n (easier-to-read) alternative to the standards documents.\n\n Finally there should be a section at the bottom of the learn page with\n links to external resources: books, standards documents, mailing lists,\n fortranwiki etc.\n\n What do you think?\n\n \u2014\n You are receiving this because you commented.\n Reply to this email directly, view it on GitHub\n <#7 (comment)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AAAFAWGGDTDM23JYL5PED7TRNLARVANCNFSM4MJ2C3VQ>."
                },
                {
                    "user": "vansnyder",
                    "date": "2020-05-05 01:02:03+00:00",
                    "text": "I've never used GitHub. I can't find anything. A tutorial how to use GitHub in the Fortran project context would be useful."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-05 17:24:53+00:00",
                    "text": "Hi @vansnyder, I'm happy you joined. I assume you need help finding your way around GitHub and getting used to its interface. There is GitHub Help documentation, but to be honest I don't think it will be helpful. Instead, I recommend just exploring and trying to find your way through practice. It looks quite busy at first but you get used to it.\nIf you'd like, I'm happy to get on a Zoom video call with you to guide you via shared screen. Just let me know.\nOtherwise, the best place for you to start is the J3 Fortran proposals repo:\nhttps://github.com/j3-fortran/fortran_proposals/issues\nYou will find many discussion topics there, a few of them evolved into J3 papers. I suggest to read those, and post in whichever you want.\n\nBut your point also makes me think of this: We should probably have a dedicated \"Contributor's guide\" page on the website that would explain:\n\nWhat is where, e.g. proposals, standard library, package manager, website code etc.\nBasic workflow for each project. E.g. workflow for proposals is different from the workflow for stdlib or fpm, which is different from that of the website code;\nA list of items that we need help with the most from new contributors.\n\nThis info is basically already in each of the repositories. However, a dedicated single-page guide for all fortran-lang projects on the website would be helpful for people who aren't already proficient with GitHub. We want everybody who is willing to be able to join and participate.\nHow do we further lower barrier to entry?"
                },
                {
                    "user": "melissawm",
                    "date": "2020-05-14 18:50:35+00:00",
                    "text": "I'd like to link this issue from stdlib. I think many of the points I raised there are valid here.\nI'd also like to offer to write the Contributor's Guide."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-15 17:58:37+00:00",
                    "text": "Like what @arjenmarkus said on the mailing list. the quickstart tutorial needs work and is IMO the highest priority to get into a somewhat polished and complete state.\nI will open a dedicated issue for that later today so we can discuss the contents and style."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-16 19:40:59+00:00",
                    "text": "@melissawm Great, a contributor's guide is direly needed if we are to attract new contributors.\nAre you thinking of a contributor's guide specifically for this repo, or for fortran-lang projects as a whole?\nEach project should have its own contributor's guide. This repo has this. Can you please take a look at it and think of how it could be improved?\nFurther, what do you think about having an overall contributor's guide which would be a page on the website, basically a guide to contributing to the community project as a whole, and then linking to individual project contributor guides?"
                }
            ]
        },
        {
            "number": 6,
            "user": "ivan-pi",
            "date": "2020-04-15 14:50:14+00:00",
            "title": "F18 information outdated",
            "text": "It seems that the F18 front-end branch has been accepted as the brand new flang and is part of the official LLVM project. The former flang compiler still exists here.\nI can take a shot at updating the page in the upcoming days, if no one else does it first.",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-04-15 18:20:41+00:00",
                    "text": "Absolutely, let's fix it!"
                },
                {
                    "user": "certik",
                    "date": "2020-04-15 19:36:39+00:00",
                    "text": "Yes, I think it should be just called Flang."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-25 09:03:45+00:00",
                    "text": "@ivan-pi I believe this was fixed with #16 and can be closed?"
                },
                {
                    "user": "ivan-pi",
                    "date": "2020-04-25 11:10:02+00:00",
                    "text": "Sure. Great work!"
                }
            ]
        },
        {
            "number": 5,
            "user": "LKedward",
            "date": "2020-04-15 14:36:22+00:00",
            "title": "Start tutorials",
            "text": "I've added a stylesheet to enable syntax highlighting and made a start on writing tutorials.\nI've put a static preview here to make it easier to view this draft pull request.\nMy idea is to have self-contained tutorials targeting three different programming abilities:\n\n\nFor beginners: quite common to see undergraduates with little programming experience asked to pick up Fortran for science//engineering degrees\n\n\nIntermediate: for those with basic programming experience using another language like c or python\n\n\nAdvanced: for those who just want to pick up the Fortran syntax and advanced features (OOP etc.)\n\n\nI also think the Learn section can contain other articles for things like best practices and advanced/niche topics etc.\nI'm happy to put work into filling this out since compared to other programming languages there are fewer good quality online tutorials and examples which makes it less accessible.\nHappy to hear feedback and ideas.\nThanks for work so far @milancurcic, the site is looking good!",
            "comments": [
                {
                    "user": "milancurcic",
                    "date": "2020-04-15 18:19:16+00:00",
                    "text": "Super nice work, thank you! I like most of it. I have some doubts about the 3-level categories of tutorials. I will write more tonight."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-16 15:39:39+00:00",
                    "text": "@certik Yes, I think so."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-16 17:08:56+00:00",
                    "text": "Thanks for the comments @milancurcic; you make some very good points which I agree with.\nIt shouldn't take long for me to consolidate current content onto the top page by tomorrow morning ready for merging."
                },
                {
                    "user": "LKedward",
                    "date": "2020-04-17 11:33:36+00:00",
                    "text": "I have completed the consolidated content (preview).\nFor review I ask:\n\nIf I have missed out any fundamental Fortran features?\nWhat technique should be recommended for real kinds?\n\nkind(0.0), kind(0.0d0)\niso_c_binding, only: c_float, c_double\niso_fortran_env, only: real32, real64"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-17 14:00:34+00:00",
                    "text": "Regarding your question about kinds, here's what we're currently doing in stdlib. This may change in the future, of course.\nThe higher level issue related to this is the Style Guide. There's currently a very minimal style guide in the stdlib repo, however, I think we should work on a Style Guide here (like a PEP8 for Python) that would then apply to all fortran-lang community projects."
                }
            ]
        },
        {
            "number": 4,
            "user": "milancurcic",
            "date": "2020-04-12 22:26:06+00:00",
            "title": "begin may 2020 newsletter draft",
            "text": "Draft newsletter for May 2020.\nTo be merged into master on May 1. Work on it until then.",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-24 21:29:14+00:00",
                    "text": "This should list all the news items that happened since the last newsletter."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-29 16:50:43+00:00",
                    "text": "First draft of May newsletter is up. Please review and suggest edits and/or additions. If you add content, please also add your name to the author field in the preamble.\nThis will be merged into master on Friday, May 1."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-29 17:46:13+00:00",
                    "text": "@jacobwilliams Do you have any Fortran positions open in your company to list here?"
                },
                {
                    "user": "jvdp1",
                    "date": "2020-04-30 05:50:24+00:00",
                    "text": "Question: could projects like your Fortran-Keras Bridge project be mentioned in this news letter?"
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-30 16:25:36+00:00",
                    "text": "@certik I added a section on WG5 convenor candidates and minor updates to stdlib news. Please review and edit as you see fit. I'm otherwise happy with this newsletter."
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 16:26:29+00:00",
                    "text": "I am ok with the wording for my WG5 run."
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 16:27:41+00:00",
                    "text": "Please do not merge yet."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-30 16:39:22+00:00",
                    "text": "@jvdp1 Good question. We discussed the scope to a limited extent in #3 .\nI don't know the answer. Originally I thought that personal projects should be out of scope for the newsletter. On the other side, it would be useful for readers to learn of new projects. They would need to be submitted for consideration, i.e. we don't want to list small toy projects that don't build or have docs. There would need to be some criterion on how to do this, like we have for including packages in the registry. I'm curious to hear what other think. Please write in #3. We don't have to rush for this newsletter, obviously we don't have a good idea yet how to do this.\nThis makes me think of another question: Should we include relevant (Fortran) new papers? I think yes if they're open access. Again, write in #3"
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 16:42:27+00:00",
                    "text": "I would not delay this first newsletter, and I would not include personal projects yet. Let's figure out a process for that, and then we can list them in future newsletters.\nThe same with the job postings, it's kind of arbitrary now, but I think it's fine to list what is in there now to get started. None of these are \"our\" postings, so nobody will feel that we are just pushing our pet projects."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-30 16:47:58+00:00",
                    "text": "Yes, conflict of interest (even non-financial kind) is my main concern for announcing personal projects or job postings. We need a well documented process for this."
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 17:00:29+00:00",
                    "text": "Yes, our main goal and job is to create home for Fortran, a community, tools, a platform for everybody, so we have to be very careful about conflicts of interest. We are in agreement."
                },
                {
                    "user": "jvdp1",
                    "date": "2020-04-30 17:19:11+00:00",
                    "text": "I agree about conflicts of interest. Let see first how the people react to this newsletter."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-05-01 13:38:01+00:00",
                    "text": "Thank you all. The newsletter is up: https://fortran-lang.org/newsletter/2020/05/01/Fortran-Newsletter-May-2020/. Please share it."
                },
                {
                    "user": "certik",
                    "date": "2020-05-01 19:30:29+00:00",
                    "text": "Thanks @milancurcic !"
                }
            ]
        },
        {
            "number": 3,
            "user": "milancurcic",
            "date": "2020-04-11 12:17:09+00:00",
            "title": "Newsletter",
            "text": "Let's discuss what should the fortran-lang newsletters be and how we should work on them.\nI posted an example newsletter in #2 yesterday. You can see the post here and the source file here. With Jekyll, like with most popular static site generators, you write posts in plain markdown, with html for any extras.\nTopics\nFirst, what topics/news should be covered by the newsletter. Here's my idea:\n\nEvents: conferences, meetups, and similar. These could be either announcements for upcoming events or briefings/reports from events that happened. They should be related to Fortran. A NumPy or weather prediction conference is probably off-topic. Fortran or HPC meetings are on topic.\nUpdates from J3 and WG5 meetings and developments of the language. Highlight proposals discussed. Like what @certik has been posting directly in issues in j3-fortran/fortran_proposals.\nFortran compiler releases\nNew development in fortran-lang projects: For example, highlighting new modules or functions in stdlib, or new fpm capability.\nNew packages available in the fpm registry.\nLast but not least, new Fortran releases (202x, 202y...). This one's pretty obvious. :)\nAnything else?\n\nWhat I think should be off-topic and omitted in newsletters:\n\nPersonal (non-community) Fortran projects, except listing them when they're added to the fpm registry.\nNews not directly about Fortran but that could be interesting to Fortran developers. Stuff about other languages etc.\n\nFormat\nI think we could have two kinds of newsletters:\n\nOff-schedule, topic-specific. This kind of newsletter covers only one item that is noteworthy. Examples: Fortran meetings, language releases, perhaps even compiler releases.\nMonthly, recurring. This kind of newsletter comes out periodically at the beginning of each month, summarizing the Fortran development and news from the previous month. It's formatted more as a summary rather than an in-depth coverage of a topic, so it can include on-topic odds and ends.\n\nHow should we work on it\nHere's what I propose:\n\nAnybody can open a PR for a newsletter\nMust assign a reviewer/editor. Can assign more than one if desired, ideally not too many. You don't want to have to wait for 5 people to review if you want timely news to go out.\nOf course, anybody can comment. If somebody thinks a PR doesn't make appropriate newsletter, they should say so.\nFor a monthly recurring newsletter, I suggest we open a draft PR at the beginning of each month, and we work on it as the month goes and new stuff happens. At the end of the month, we clean it up and merge.\n\nObviously, my PR #2 was not an example of this workflow. I just wanted to get something up quickly to use as an example.\nWe can automate posting of new newsletters to the @fortranlang Twitter using this. For people who use RSS readers, we have a feed on the website.\nWhat do you think? @certik @jvdp1 @ivan-pi @everythingfunctional @jacobwilliams @marshallward @zbeekman",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-11 14:53:07+00:00",
                    "text": "I agree with everything you wrote. This is a good start. As we go, we can further refine or relax some of the rules.\n\u2026\nOn Sat, Apr 11, 2020, at 6:17 AM, Milan Curcic wrote:\n\n\n Let's discuss what should the fortran-lang newsletters be and how we\n should work on them.\n\n I posted an example newsletter in #2\n <#2>\n yesterday. You can see the post here\n <https://fortran-lang.org/newsletter/2020/04/06/Announcing-FortranCon-2020/> and the source file here <https://raw.githubusercontent.com/fortran-lang/fortran-lang.github.io/master/_posts/2020-04-06-Announcing-FortranCon-2020.md>. With Jekyll, like with most popular static site generators, you write posts in plain markdown, with html for any extras.\n\n Topics\n\n First, what topics/news should be covered by the newsletter. Here's my idea:\n\n  * Events: conferences, meetups, and similar. These could be either\n announcements for upcoming events or briefings/reports from events that\n happened. They should be related to Fortran. A NumPy or weather\n prediction conference is probably off-topic. Fortran or HPC meetings\n are on topic.\n  * Updates from J3 and WG5 meetings and developments of the language.\n Highlight proposals discussed. Like what @certik\n <https://github.com/certik> has been posting directly in issues in\n j3-fortran/fortran_proposals.\n  * Fortran compiler releases\n  * New development in fortran-lang projects: For example, highlighting\n new modules or functions in stdlib, or new fpm capability.\n  * New packages available in the fpm registry.\n  * Last but not least, new Fortran releases (202x, 202y...). This one's\n pretty obvious. :)\n  * Anything else?\n What I think should be off-topic and omitted in newsletters:\n\n  * Personal (non-community) Fortran projects, except listing them when\n they're added to the fpm registry.\n  * News not directly about Fortran but that could be interesting to\n Fortran developers. Stuff about other languages etc.\n Format\n\n I think we could have two kinds of newsletters:\n\n  * Off-schedule, topic-specific. This kind of newsletter covers only\n one item that is noteworthy. Examples: Fortran meetings, language\n releases, perhaps even compiler releases.\n  * Monthly, recurring. This kind of newsletter comes out periodically\n at the beginning of each month, summarizing the Fortran development and\n news from the previous month. It's formatted more as a summary rather\n than an in-depth coverage of a topic, so it can include on-topic odds\n and ends.\n How should we work on it\n\n Here's what I propose:\n\n  * Anybody can open a PR for a newsletter\n  * Must assign a reviewer/editor. Can assign more than one if desired,\n ideally not too many. You don't want to have to wait for 5 people to\n review if you want timely news to go out.\n  * Of course, anybody can comment. If somebody thinks a PR doesn't make\n appropriate newsletter, they should say so.\n  * For a monthly recurring newsletter, I suggest we open a draft PR at\n the beginning of each month, and we work on it as the month goes and\n new stuff happens. At the end of the month, we clean it up and merge.\n Obviously, my PR #2\n <#2> was not\n an example of this workflow. I just wanted to get something up quickly\n to use as an example.\n\n I will do some research how we can automate posting of new newsletters\n to the @fortranlang Twitter automatically, perhaps via GitHub Actions.\n For people who use RSS readers, we have a feed on the website.\n\n What do you think? @certik <https://github.com/certik> @jvdp1\n <https://github.com/jvdp1> @ivan-pi <https://github.com/ivan-pi>\n @everythingfunctional <https://github.com/everythingfunctional>\n @jacobwilliams <https://github.com/jacobwilliams> @marshallward\n <https://github.com/marshallward> @zbeekman\n <https://github.com/zbeekman>\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#3>, or\n unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAAFAWGVXFLSFXIVUCOQN43RMBNVDANCNFSM4MF7KBSQ>."
                },
                {
                    "user": "everythingfunctional",
                    "date": "2020-04-11 17:55:20+00:00",
                    "text": "That sounds well thought out and reasonable. I like it."
                },
                {
                    "user": "milancurcic",
                    "date": "2020-04-12 21:51:59+00:00",
                    "text": "I just thought it'd also be useful for the monthly newsletter to have a list of Fortran job postings."
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 15:54:06+00:00",
                    "text": "The first newsletter is on the way at #4. Before we close this issue, let's create a document with information how the newsletter works. @milancurcic do you want to take a stab at that?"
                }
            ]
        },
        {
            "number": 2,
            "user": "milancurcic",
            "date": "2020-04-11 00:57:14+00:00",
            "title": "Update FortranCon post",
            "text": "",
            "comments": []
        },
        {
            "number": 1,
            "user": "milancurcic",
            "date": "2020-04-10 15:13:45+00:00",
            "title": "Update J3 February meeting update",
            "text": "@certik When you have some time, can you please post your J3 February meeting update in this file:\nhttps://github.com/fortran-lang/fortran-lang.github.io/blob/master/_posts/2020-02-25-J3-february-meeting.md",
            "comments": [
                {
                    "user": "certik",
                    "date": "2020-04-10 15:57:42+00:00",
                    "text": "Yes! Thank you. I'll do it very soon."
                },
                {
                    "user": "certik",
                    "date": "2020-04-30 15:55:39+00:00",
                    "text": "This has been fixed in #29, #30 and #42. The result is visible at:\nhttps://fortran-lang.org/newsletter/2020/02/28/J3-february-meeting/"
                }
            ]
        }
    ]
}